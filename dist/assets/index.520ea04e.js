var ne=Object.defineProperty;var se=(l,e,t)=>e in l?ne(l,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):l[e]=t;var c=(l,e,t)=>(se(l,typeof e!="symbol"?e+"":e,t),t),oe=(l,e,t)=>{if(!e.has(l))throw TypeError("Cannot "+t)};var H=(l,e,t)=>(oe(l,e,"read from private field"),t?t.call(l):e.get(l)),G=(l,e,t)=>{if(e.has(l))throw TypeError("Cannot add the same private member more than once");e instanceof WeakSet?e.add(l):e.set(l,t)};import{H as ae,M as le,V as y,S as W,D as q,P as T,T as Y,C as j,a as I,b as re,A as C,B as Z,c as he,R as ce,d as K,e as R,W as de,E as me,f as ge,U as fe,g as ue,h as pe}from"./vendor.f9fe2758.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))s(n);new MutationObserver(n=>{for(const i of n)if(i.type==="childList")for(const r of i.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&s(r)}).observe(document,{childList:!0,subtree:!0});function t(n){const i={};return n.integrity&&(i.integrity=n.integrity),n.referrerpolicy&&(i.referrerPolicy=n.referrerpolicy),n.crossorigin==="use-credentials"?i.credentials="include":n.crossorigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function s(n){if(n.ep)return;n.ep=!0;const i=t(n);fetch(n.href,i)}})();window.exports=window;class be{constructor(e,t,s,n=0){c(this,"complete",!1);c(this,"title");c(this,"description");c(this,"failed",!1);c(this,"onFail");c(this,"onSuccess");c(this,"onCompletion");c(this,"currentState");c(this,"tasks");c(this,"resetSOP",()=>{this.currentState=0,this.failed=!1,this.complete=!1});this.title=e,this.description=t,this.tasks=s,this.currentState=n}}const v=60,ye=50,X=3,x="cylinder",V="liquid",Me="placard",b=new be("","",[{next:"CtoA",label:"BtoC"},{next:"complete",label:"CtoA"}]);function A(l,e){return l.getChildMeshes().find(t=>t.name===e)||null}function D(l){l.rotation.x=0,l.rotation.y=0,l.rotation.z=0}function Q(l){l.position.x=0,l.position.y=0,l.position.z=0}class z{constructor(e,t,s,n){c(this,"name");c(this,"position");c(this,"mesh");c(this,"dragCollision");c(this,"highlightLayer");c(this,"scene");c(this,"particleSystem");console.log(e),this.name=s;const i=e.getScene();this.scene=i,this.highlightLayer=new ae("highlight-layer",i),this.highlightLayer.innerGlow=!0,this.highlightLayer.outerGlow=!1;const r=i.getMeshByName("Table");let o=le.CreateSphere(`pivot-Cylinder-${s}`,{segments:2,diameterX:.15,diameterY:.33,diameterZ:.2},e.getScene());if(o.visibility=0,e.name=s,e.parent=o,e.rotationQuaternion=null,e.getChildMeshes().forEach(u=>{switch(u.name){case"BeakerwOpacity":u.name=x,u.rotationQuaternion=null,u.rotation.z=2*Math.PI,u.isPickable=!1;break;case"BeakerLiquid":u.name=V,u.isPickable=!1;break}}),r){const u=r.getBoundingInfo().boundingBox,w=A(e,x).getBoundingInfo().boundingBox.maximum.y+1e-8;o.position.y=u.maximumWorld.y+w,o.position.x=(u.maximumWorld.x-u.minimumWorld.x)/X*t+u.minimumWorld.x-.3,o.position.z=(u.centerWorld.z+u.minimumWorld.z)/2,this.position={...o.position}}else o.position.x=-2+t,o.position.y=1.22,o.position.z=.5;o.checkCollisions=!0,o.ellipsoid=new y(.02,.16,.02),this.mesh=o;const d=A(e,V),g=new W("liquid-material");g.diffuseColor=n,d.material=g;const f=A(e,"Label"),h=A(e,"LabelBack");console.log("Label:",h);const m=new q("dynamic texture",256,i),a=new W("Mat",i);a.diffuseTexture=m,f.material=a,h.material=a;const P="bold 300px monospace";m.drawText(e.name.toUpperCase(),65,225,P,"black","white");let O=this.mesh.getChildMeshes().find(u=>u.name==="cylinder");this.mesh.animations=O.animations,console.log("Children: ",this.mesh.getChildMeshes());const M=new T("particles",500,this.scene);M.particleTexture=new Y("https://raw.githubusercontent.com/PatrickRyanMS/BabylonJStextures/master/FFV/smokeParticleTexture.png",this.scene),M.minLifeTime=.5,M.maxLifeTime=.7,M.emitRate=100,M.gravity=new y(0,.5,0),M.minSize=.01,M.maxSize=.07,M.createPointEmitter(new y(0,0,0),new y(0,1,0)),M.addColorGradient(1,j.FromColor3(d.material.diffuseColor,1)),M.blendMode=T.BLENDMODE_STANDARD,M.emitter=this.mesh.position,this.particleSystem=M,this.addDragCollision()}startParticles(){this.particleSystem.start()}highlight(e=!0){let t=A(this.mesh,x);e?(console.log("Adding mesh"),this.highlightLayer.hasMesh(t)||this.highlightLayer.addMesh(t,I.Green())):this.highlightLayer.hasMesh(t)&&this.highlightLayer.removeMesh(t)}addDragCollision(){let e=new re({dragPlaneNormal:new y(0,0,1)});e.useObjectOrientationForDragging=!1,e.moveAttached=!1,e.onDragStartObservable.add(()=>{}),e.onDragObservable.add(t=>{this.mesh.moveWithCollisions(t.delta)}),e.onDragEndObservable.add(()=>{this.fadeAndRespawn()}),this.mesh.addBehavior(e),this.dragCollision=e}removeDragCollision(){this.mesh.removeBehavior(this.dragCollision)}fadeAndRespawn(e=ye){setTimeout(()=>{this.mesh.isPickable=!1;let t=60;this.mesh.name.split("-")[0];let s=this.mesh.getScene(),n=this.mesh.getChildMeshes(),i=n.find(o=>o.name==="cylinder");n.find(o=>o.name==="liquid");let r=[{name:"Invisibility",startValue:1},{name:"Visibility",startValue:0}];r.forEach(o=>{o.init=new C(o.name,"visibility",120,C.ANIMATIONTYPE_FLOAT,C.ANIMATIONLOOPMODE_CONSTANT),o.init.setKeys([{frame:0,value:o.startValue},{frame:t,value:1-o.startValue}])});for(let o=0;o<n.length-1;++o){let d=n[o];s.beginDirectAnimation(d,[r[0].init],0,60,!1)}s.beginDirectAnimation(n[n.length-1],[r[0].init],0,60,!1,void 0,()=>{console.log(this.mesh,this.position),this.mesh.position.x=this.position._x,this.mesh.position.y=this.position._y,this.mesh.position.z=this.position._z,this.mesh.animations=i.animations;let o=A(this.mesh,x);D(this.mesh),D(o),Q(o);for(let d=0;d<n.length-1;++d){let g=n[d];s.beginDirectAnimation(g,[r[1].init],0,60,!1)}s.beginDirectAnimation(n[n.length-1],[r[1].init],0,60,!1,void 0,()=>{this.highlight(!1),this.mesh.isPickable=!0})})},e)}rotateAroundZ(){let e=this.mesh.getAnimationByName(`${this.name}-rotateAroundZ`);this.scene.beginDirectAnimation(A(this.mesh,x),[e],0,60,!1,void 0,()=>{})}resetAroundZ(){let e=this.mesh.getAnimationByName(`${this.name}-resetRotateAroundZ`);this.scene.beginDirectAnimation(A(this.mesh,x),[e],0,60,!1,void 0,()=>{})}}function Ce(l){l.name="clipboard";const e=l.getScene(),t=e.getMeshByName("Table");if(t){const n=t.getBoundingInfo().boundingBox;l.position.y=n.maximumWorld.y+.003}l.rotationQuaternion=null,l.rotation=new y(0,Math.PI/4,0);const s=e.getMeshByName("pivot-Cylinder-A");s&&(l.position.x=s.position.x+.2,l.position.z=s.position.z+.5)}function Ae(l){var e=new Z(I.FromHexString("#0984e3"));e.ignoreChildren=!0;var t=l[0],s=Z.MakeNotPickableAndWrapInBoundingBox(t);e.attachedMesh=s,e.onScaleBoxDragObservable.add(()=>{console.log("scaleDrag")}),e.onScaleBoxDragEndObservable.add(()=>{const n=e.attachedMesh;if(n){const i=n.getHierarchyBoundingVectors(!0);console.log("size x:",i.max.x-i.min.x),console.log("size y:",i.max.y-i.min.y),console.log("size z:",i.max.z-i.min.z)}console.log("scaleEnd")}),e.onRotationSphereDragObservable.add(()=>{console.log("rotDrag")}),e.onRotationSphereDragEndObservable.add(()=>{console.log("rotEnd")})}function F(l,e,t){const s=l.find(h=>h.name==="__root__"),n=s.getScene();s.name=t;const i=l.find(h=>h.name==="Label"),r=l.find(h=>h.name==="Placard");r.name=Me;const o=new q("dynamic texture",256,n);o.wAng=-Math.PI/2,o.uAng=Math.PI;const d=new W("Mat",n);d.diffuseTexture=o,i.material=d;const g="bold 220px monospace";o.drawText(s.name.split("-")[1].toUpperCase(),65,185,g,"black","white"),r.addChild(i),r.rotationQuaternion=null,r.rotation=new y(0,Math.PI/2,0);const f=n.getMeshByName("Table");if(f){const h=f.getBoundingInfo().boundingBox;s.position.y=h.maximumWorld.y+.003,s.position.x=(h.maximumWorld.x-h.minimumWorld.x)/X*e+h.minimumWorld.x-.2,s.position.z=(h.centerWorld.z+h.minimumWorld.z)/2+.2}}function xe(l,e,t){let s;return new Promise(n=>{const i="./models/";let r="";var o={};let d=["left","right"];const g=new he(l);d.forEach(h=>{g.addMeshTask(`load ${h} hand`,"",i,`${h}${r}.glb`)});let f=0;g.onTaskSuccess=h=>{o[d[f]]=h.loadedMeshes[1],h.loadedMeshes[1].name=d[f],s=h.loadedAnimationGroups;for(let m=0;m<s.length;m++)s[m].name=`${d[f]}_${s[m].name}`;f++},g.onTasksDoneObservable.add(()=>{for(let h=0;h<l.animationGroups.length;h++)l.animationGroups[h].pause();e.input.onControllerAddedObservable.add(h=>{let m=h.inputSource.handedness;console.log(o[m]);let a=o[m].parent.parent;o[m].isPickable=!1;for(let B of t)B.removeDragCollision();let P=(Object.keys(o).indexOf(m)-1)*2-1;o[m].rotation.y=Math.PI*P,o[m].rotation.z=0,o[m].rotation.x=-Math.PI/4,a.parent=h.grip||h.pointer})}),g.loadAsync().then(()=>{n(s)})})}class J{constructor(e,t){c(this,"cylinderInstances");c(this,"clipboard");c(this,"scene");c(this,"labels");this.labels=["A","B","C"],this.scene=e,this.cylinderInstances=t}getCylinderInstanceFromMesh(e){let t=e.name.split("-")[2];console.log("Name: ",t);for(let s of this.cylinderInstances)if(console.log("Instance name: ",s.name),s.name==t)return s;return null}intersectHandCylinder(e){for(let t of this.labels){let s=this.scene.getMeshByName(`pivot-Cylinder-${t}`);if(e.intersectsMesh(s,!1))return s}return null}intersectCylinder(e){for(let t of this.labels){let s=this.scene.getMeshByName(`pivot-Cylinder-${t}`);if(s!=e&&e.intersectsMesh(s))return s}return null}highlightAndRotateCylinders(e,t,s){e.highlight(),t.highlight();let n=e.mesh.getAbsolutePosition()._x,i=t.mesh.getAbsolutePosition()._x;if(i<n?(console.log("Left hit!"),e.mesh.rotation.y=Math.PI,t.mesh.rotation.y=e.mesh.rotation.y):(console.log("Right hit!"),e.mesh.rotation.y=0,t.mesh.rotation.y=e.mesh.rotation.y),!s){s=!0;let r=e.mesh.getHierarchyBoundingVectors(),o=r.max.y-r.min.y,d=-.09,f=n-i,h=A(e.mesh,x);i<n?(console.log("Src pos: ",e.position.x),h.position.x=f+d,h.position.y=o-.2):(h.position.x=f-d,h.position.y=o-.2),e.rotateAroundZ()}return s}moveWithCollisions(e,t){e.moveWithCollisions(t)}}class ee extends J{constructor(e,t){super(e,t)}resetCylinders(){console.log(this);let e=["A","B","C"];for(let t=0;t<e.length;t++){const s=this.scene.getMeshByName(`pivot-Cylinder-${e[t]}`),n=this.scene.getMeshByName("Table");if(n&&s){const i=n.getBoundingInfo().boundingBox;s.position.z=(i.centerWorld.z+i.minimumWorld.z)/2}}}postSceneCylinder(){this.resetCylinders();let e=["A","B","C"],t=[];for(let n of e){const i=this.scene.getMeshByName(`pivot-Cylinder-${n}`);t.push(i);let r=new C(`${n}-rotateAroundZ`,"rotation.z",120,C.ANIMATIONTYPE_FLOAT,C.ANIMATIONLOOPMODE_CONSTANT),o=A(i,x);const d=[];d.push({frame:0,value:Math.PI*2}),d.push({frame:60,value:4.62}),o.animations.push(r),r.setKeys(d);let g=new C(`${n}-resetRotateAroundZ`,"rotation.z",120,C.ANIMATIONTYPE_FLOAT,C.ANIMATIONLOOPMODE_CONSTANT);const f=[];f.push({frame:0,value:4.62}),f.push({frame:60,value:Math.PI*2}),o.animations.push(g),g.setKeys(f)}let s=!1;for(let n=0;n<e.length;n++){const i=this.scene.getMeshByName(`pivot-Cylinder-${e[n]}`);let r=super.getCylinderInstanceFromMesh(i);console.log("Dragging!");const o=i.getBehaviorByName("PointerDrag");console.log(o);let d=[];for(let h of t)h!=i&&d.push(h);let g=A(i,x),f=!1;o.onDragObservable.add(()=>{let h=!1;D(i);const m=super.intersectCylinder(i);if(m){let a=super.getCylinderInstanceFromMesh(m);console.log("Hit!"),h=!0;let P=m.name.split("-")[2],O=`${i.name.split("-")[2]}to${P}`;if(b.tasks[b.currentState].label===O)b.tasks[b.currentState].next==="complete"?(this.resetCylinders(),r.fadeAndRespawn(),b.resetSOP()):b.currentState=b.tasks.indexOf(b.tasks.find(p=>p.label==b.tasks[b.currentState].next));else if(!s){s=!0;const p=new T("particles",500,this.scene);p.particleTexture=new Y("https://raw.githubusercontent.com/PatrickRyanMS/BabylonJStextures/master/FFV/smokeParticleTexture.png",this.scene),p.minLifeTime=.5,p.maxLifeTime=.7,p.emitRate=100,p.gravity=new y(0,.5,0),p.minSize=.01,p.maxSize=.07,p.createPointEmitter(new y(0,0,0),new y(0,1,0));const N=A(m,V);p.addColorGradient(1,j.FromColor3(N.material.diffuseColor,1)),p.blendMode=T.BLENDMODE_STANDARD,p.emitter=m.position,p.start()}let M=i.getAbsolutePosition()._x;m.getAbsolutePosition()._x<M?(g.rotation.y=Math.PI,m.rotation.y=g.rotation.y):(g.rotation.y=0,m.rotation.y=g.rotation.y),f||(f=super.highlightAndRotateCylinders(r,a,f))}else r.highlight(!1),D(i);h==!1&&(r.highlight(!1),f&&(g.position.x=0,g.position.y=0,f=!1,r.resetAroundZ()))}),o.onDragEndObservable.add(()=>{A(i,x).getBehaviorByName("Highlight");for(let h of d)h!=g&&(r.highlight(!1),super.getCylinderInstanceFromMesh(h).highlight(!1),g.intersectsMesh(h)&&(r.resetAroundZ(),g.position.x=0,g.position.y=0,f=!1))})}}}class U extends J{constructor(t,s,n){super(s,n);c(this,"handedness");c(this,"holdingInstance");c(this,"holdingMesh");c(this,"targetMesh");c(this,"targetMeshInstance");c(this,"motionController");c(this,"handMesh");c(this,"isVisible");this.handedness=t,this.handMesh=s.getMeshByName(this.handedness),this.isVisible=!0}getMotionController(){return this.motionController}setMotionController(t){this.motionController=t}dropped(t){this.motionController.lastPosition=null,clearInterval(t),this.motionController.grabbed=!1,this.motionController.meshGrabbed=void 0,console.log(this.holdingMesh),this.holdingMesh&&(this.holdingInstance.fadeAndRespawn(100),this.holdingMesh=null,this.holdingInstance=null,this.motionController.meshGrabbed=null)}updateSOPTask(t,s,n){console.log(this.scene);let i=`${t}to${s}`;if(b.tasks[b.currentState].label===i)if(b.tasks[b.currentState].next==="complete"){let r=new ee(this.scene,this.cylinderInstances);for(let o of this.cylinderInstances)o.fadeAndRespawn(100);return this.disappearAnimation(!1),this.dropped(n),r.resetCylinders(),b.resetSOP(),!0}else return b.currentState=b.tasks.indexOf(b.tasks.find(r=>r.label==b.tasks[b.currentState].next)),!1}disappearAnimation(t=!0){console.log("DISAPPEAR: ",t);let s=60,n=[{name:"Invisibility",startValue:1},{name:"Visibility",startValue:0}];n.forEach(i=>{i.init=new C(i.name,"visibility",120,C.ANIMATIONTYPE_FLOAT,C.ANIMATIONLOOPMODE_CONSTANT),i.init.setKeys([{frame:0,value:i.startValue},{frame:s,value:1-i.startValue}])}),console.log(this.handMesh),t?(this.isVisible=!1,this.scene.beginDirectAnimation(this.handMesh,[n[0].init],0,60,!1)):(this.isVisible=!0,this.scene.beginDirectAnimation(this.handMesh,[n[1].init],0,60,!1))}}function Pe(l,e,t,s){let n=new U("right",l,s),i=new U("left",l,s),r=!1,o={right:n,left:i},d=!1;function g(f){let h=f.name.split("-")[2];console.log("Name: ",h);for(let m of s)if(console.log("Instance name: ",m.name),m.name==h)return m;return null}e.input.onControllerAddedObservable.add(f=>{f.onMotionControllerInitObservable.add(h=>{let m=h;m.handID=h.handedness;let a=o[m.handedness];a.getMotionController()||a.setMotionController(m),console.log(a);let P=new ce(y.Zero(),y.Zero(),.25);const B=h.getComponentOfType("squeeze");[h.getComponentOfType("trigger"),B].forEach(M=>{console.log(l.getMeshByName("left")),M.onButtonStateChangedObservable.add(u=>{let p,N={left:"Fist",right:"Grip"},w=l.animationGroups.find((E,_)=>E.name===`${a.motionController.handID}_${N[a.motionController.handID]}`);w.goToFrame(u.value*(w._to-1)+1);let S=a.intersectHandCylinder(l.getMeshByName(m.handID));if(console.log("Grabbed Cylinder: ",S),u.value>0&&!a.motionController.grabbed){if(S){r=!1,a.holdingMesh=S,a.holdingInstance=g(a.holdingMesh),a.motionController.meshGrabbed=a.holdingMesh,a.motionController.grabbed=!0;let E=a.motionController.lastPosition,_=P.origin;_!=E&&(a.disappearAnimation(!0),p=setInterval(()=>{let $=a.motionController.lastPosition;if(f.getWorldPointerRayToRef(P),$&&a.holdingMesh&&a.moveWithCollisions(a.holdingMesh,_.subtract($)),!a.intersectHandCylinder(l.getMeshByName(a.motionController.handID))&&a.holdingMesh&&(a.targetMeshInstance&&a.targetMeshInstance.highlight(!1),a.dropped(p),a.motionController.grabbed=!1,a.handMesh.visibility=1,r=!0),a.holdingMesh){let L=a.intersectCylinder(a.holdingMesh);if(L){a.targetMesh=L,a.targetMeshInstance=g(L);let te=L.name.split("-")[2],ie=a.holdingMesh.name.split("-")[2];d=a.highlightAndRotateCylinders(a.holdingInstance,a.targetMeshInstance,d),r=a.updateSOPTask(ie,te,p)}else a.targetMeshInstance&&a.targetMeshInstance.highlight(!1),a.holdingInstance.highlight(!1),d&&(a.holdingInstance.resetAroundZ(),Q(A(a.holdingMesh,x)),d=!1)}r||(a.motionController.lastPosition=Object.assign({},P.origin),m.lastPosition=Object.assign({},P.origin))},10))}}else(!u.value||!S)&&a.holdingMesh&&(a.holdingInstance.highlight(!1),a.motionController.grabbed=!1,a.targetMeshInstance&&a.targetMeshInstance.highlight(!1),a.dropped(p),a.disappearAnimation(!1))})})})})}var k;class ve{constructor(e){c(this,"flying",!1);c(this,"active",!1);c(this,"camera");c(this,"mesh");c(this,"offset",.3);c(this,"animations");c(this,"returnPosition");c(this,"returnRotation");c(this,"onPointerDownObserver");c(this,"xrCamera");c(this,"attach",(e,t,s,n,i)=>{const r=e.getScene();if(this.mesh=e,!t&&(t=r.activeCamera,!t))throw new Error("The scene has no active camera, and no camera was provided.");this.camera=t,s||(s=this.mesh.position),n||(n=this.mesh.rotation),i&&(this.offset=i),this.returnPosition=s,this.returnRotation=n,this.onPointerDownObserver=r.onPointerObservable.add(this.clipboardClick)});c(this,"detach",()=>{this.mesh.getScene().onPointerObservable.remove(this.onPointerDownObserver)});c(this,"clipboardClick",(e={type:K.POINTERDOWN,pickInfo:{pickedMesh:this.mesh}})=>{var t;if(e.type===K.POINTERDOWN){console.log("Clipboard click");const s=(t=e.pickInfo)==null?void 0:t.pickedMesh;if(s&&(s===this.mesh||s.isDescendantOf(this.mesh))&&!this.flying||this.active){const n=this.active?v/2:0,i=this.active?0:v/2;H(this,k).call(this),this.flying=!0,this.mesh.billboardMode==R.BILLBOARDMODE_ALL?this.mesh.billboardMode=R.BILLBOARDMODE_NONE:this.mesh.billboardMode=R.BILLBOARDMODE_ALL,this.mesh.getScene().beginDirectAnimation(this.mesh,this.animations,n,i,!1,void 0,()=>{this.flying=!1,this.active=!this.active})}}});c(this,"calculateTargetPositionWithOffset",e=>{if(this.xrCamera!==void 0&&this.xrCamera.state===de.IN_XR){const r=this.xrCamera.camera._position.subtract(this.returnPosition).scale(1-e/y.Distance(this.returnPosition,this.xrCamera.camera._position));return this.returnPosition.add(r)}const s=this.camera._position.subtract(this.returnPosition).scale(1-e/y.Distance(this.returnPosition,this.camera._position));return this.returnPosition.add(s)});c(this,"setClipboardUp",()=>new y(3.1468286,4.6617744,1.680752));G(this,k,()=>{const e=this.animations.find(({name:i})=>i==="translate"),t=this.animations.find(({name:i})=>i==="rotate"),s=[{frame:0,value:this.returnPosition},{frame:v/2,value:this.calculateTargetPositionWithOffset(this.offset)}],n=[{frame:0,value:this.returnRotation},{frame:v/2,value:this.setClipboardUp()}];e.setKeys(s),t.setKeys(n)});const t=new C("translate","position",v,C.ANIMATIONTYPE_VECTOR3),s=new C("rotate","rotation",v,C.ANIMATIONTYPE_VECTOR3);this.animations=[t,s],this.xrCamera=e}get name(){return"FlyToCamera"}init(){}}k=new WeakMap;console.log=()=>{};class Be{constructor(){c(this,"handAnimation");c(this,"sop");c(this,"models");c(this,"cylinders");this.cylinders=[];let e="TLLGraduatedCylinderNewLabel.glb";this.models=[{fileName:"NewLaboratoryUNFINISHED.glb",callback:t=>this.createRoom(t),label:"floor"},{fileName:"clipBoardWithPaperCompressedTexture.glb",callback:t=>Ce(t[0])},{fileName:"Placard_Label.glb",callback:t=>F(t,1,"Placard-A")},{fileName:"Placard_Label.glb",callback:t=>F(t,2,"Placard-B")},{fileName:"Placard_Label.glb",callback:t=>F(t,3,"Placard-C")},{fileName:e,callback:t=>this.cylinders.push(new z(t[0],1,"A",new I(1,0,0))),label:"Cylinder-A"},{fileName:e,callback:t=>this.cylinders.push(new z(t[0],2,"B",new I(0,1,0))),label:"Cylinder-B"},{fileName:e,callback:t=>this.cylinders.push(new z(t[0],3,"C",new I(0,0,1))),label:"Cylinder-C"}].map(function(t){return Object.assign({},{fileName:"LabBench.glb",root:"./models/",callback:Ae,label:"NoLabel"},t)}),this.createScene().then(t=>{for(let s of["A","B","C"])Object.assign({},t.getMeshByName(`pivot-Cylinder-${s}`).position);this.processScene(t,this.cylinders)})}async processScene(e,t){let s=e.getCameraByName("camera"),n=e.getLightByName("light1"),i;s.speed=.16;let r=setInterval(()=>{n.intensity>=1?clearInterval(r):n.intensity+=.1},60);const o=["WallsandFloor","WallsAndFloor.001"],d=[];for(let f of o){console.log(f);const h=e.getMeshByName(f);h&&d.push(h)}let g={floorMeshes:d,inputOptions:{doNotLoadControllerMeshes:!0}};i=await e.createDefaultXRExperienceAsync(g),i.pointerSelection.displayLaserPointer=!1,i.pointerSelection.displaySelectionMesh=!1,xe(e,i,t).then(f=>{if(console.log("add webxr"),i){const m=new ve(i.baseExperience);e.getMeshByName("clipboard").addBehavior(m)}new ee(e,t).postSceneCylinder(),Pe(e,i,f,t)})}createRoom(e){const t=["WallsandFloor","WallsAndFloor.001","Table","Roof","Countertop","Walls"];let s,n;for(let i of t){const r=e.find(o=>o.name===i);if(r&&(r.checkCollisions=!0,r.name==="Table")){const d=r.getBoundingInfo().boundingBox.center.x;s=r.getScene(),n=s.getCameraByName("camera"),n.position.x=d-.7}}}createScene(){return new Promise(e=>{const t=document.getElementById("canvas"),s=new me(t,!0,{stencil:!0}),n=new ge(s);n.collisionsEnabled=!0,window.addEventListener("resize",function(){s.resize()});const i=new fe("camera",new y(0,1.84,-1.134),n);i.ellipsoid=new y(.4,.7,.4),i.attachControl(t,!0),i.applyGravity=!0,i.minZ=0,i.speed=0,i.checkCollisions=!0,i.keysUp.push(87),i.keysDown.push(83),i.keysLeft.push(65),i.keysRight.push(68);var r=new ue("light1",new y(1,1,0),n);r.intensity=0,Promise.all(this.models.map(o=>new Promise(d=>pe.ImportMesh("",o.root,o.fileName,n,function(g){o.mesh=g,d(g)})))).then(()=>{let o=[];this.models.map(d=>{o.push(d.callback(d.mesh)),e(n)})}),window.addEventListener("keydown",o=>{o.shiftKey&&o.ctrlKey&&o.altKey&&o.keyCode===73&&(n.debugLayer.isVisible()?n.debugLayer.hide():n.debugLayer.show())}),s.runRenderLoop(()=>{n.render()})})}}new Be;
