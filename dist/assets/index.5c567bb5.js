var G=Object.defineProperty;var q=(t,e,o)=>e in t?G(t,e,{enumerable:!0,configurable:!0,writable:!0,value:o}):t[e]=o;var c=(t,e,o)=>(q(t,typeof e!="symbol"?e+"":e,o),o),K=(t,e,o)=>{if(!e.has(t))throw TypeError("Cannot "+o)};var E=(t,e,o)=>(K(t,e,"read from private field"),o?o.call(t):e.get(t)),S=(t,e,o)=>{if(e.has(t))throw TypeError("Cannot add the same private member more than once");e instanceof WeakSet?e.add(t):e.set(t,o)};import{M as T,V as A,S as D,D as F,H as V,C as N,P as U,A as u,B as k,a as Y,R as $,b as Z,c as R,d as P,W as Q,E as X,e as j,U as J,f as ee,g as te}from"./vendor.a3a3fd79.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))l(n);new MutationObserver(n=>{for(const i of n)if(i.type==="childList")for(const a of i.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&l(a)}).observe(document,{childList:!0,subtree:!0});function o(n){const i={};return n.integrity&&(i.integrity=n.integrity),n.referrerpolicy&&(i.referrerPolicy=n.referrerpolicy),n.crossorigin==="use-credentials"?i.credentials="include":n.crossorigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function l(n){if(n.ep)return;n.ep=!0;const i=o(n);fetch(n.href,i)}})();window.exports=window;function y(t,e){return t.getChildMeshes().find(o=>o.name===e)||null}function ie(t){var l;const e=new URLSearchParams(document.location.search);(e.get("debug")===""||((l=e.get("debug"))==null?void 0:l.toLowerCase())==="true")&&t.debugLayer.show()}class W{constructor(e,o,l,n=0){c(this,"complete",!1);c(this,"title");c(this,"description");c(this,"failed",!1);c(this,"onFail");c(this,"onSuccess");c(this,"onCompletion");c(this,"currentState");c(this,"tasks");this.title=e,this.description=o,this.tasks=l,this.currentState=n}}const L=60,ne=50,z=3,M="cylinder",_="liquid",ae="placard";new W("","",[{next:"CtoA",label:"BtoC"},{next:"complete",label:"CtoA"}]);class oe{constructor(e,o){c(this,"highlightLayer");c(this,"highlightColor");c(this,"highlightReferences");c(this,"highlightingMeshes");c(this,"mesh");c(this,"attach",e=>{this.mesh=e,this.highlightLayer.addMesh(this.mesh,this.highlightColor)});c(this,"detach",()=>{this.highlightLayer.removeMesh(this.mesh),this.highlightReferences=0,this.highlightingMeshes=[]});c(this,"highlightSelf",()=>{this.highlightLayer.isEnabled=!0});c(this,"unhighlightSelf",()=>{this.highlightReferences||(this.highlightLayer.isEnabled=!1)});c(this,"highlightMesh",e=>{if(this.highlightingMeshes.find(l=>l===e))return!1;const o=e.getBehaviorByName(this.name);return o?(o.highlightReferences+=1,o.highlightSelf(),this.highlightingMeshes.push(e),!0):!1});c(this,"unhighlightMesh",e=>{const o=e.getBehaviorByName(this.name);if(!o)return!1;const l=this.highlightingMeshes.findIndex(n=>n===e);return l===-1?!1:(o.highlightReferences-=1,o.unhighlightSelf(),this.highlightingMeshes.splice(l,1),!0)});this.highlightLayer=e,this.highlightColor=o,this.highlightReferences=0,this.highlightingMeshes=[]}get name(){return"Highlight"}init(){}}const x=(t,e,o,l)=>{const n=t.getScene(),i=n.getMeshByName("Table");let a=T.CreateSphere(`pivot-${o}`,{diameterX:.15,diameterY:.33,diameterZ:.2},t.getScene());a.visibility=0,t.name=o,t.parent=a,t.rotationQuaternion=null;let r=T.CreateBox("LEFT_COLLISION");r.scaling.y=.01,r.scaling.x=.04,r.scaling.z=.04,r.parent=a,r.position.y+=.3,r.position.x-=.15,r.visibility=0;let s=T.CreateBox("RIGHT_COLLISION");if(s.scaling.y=.01,s.scaling.x=.04,s.scaling.z=.04,s.parent=a,s.position.y+=.3,s.position.x+=.15,s.visibility=0,t.getChildMeshes().forEach(m=>{switch(m.name){case"BeakerwOpacity":m.name=M,m.rotationQuaternion=null,m.rotation.z=2*Math.PI,m.isPickable=!1;break;case"BeakerLiquid":m.name=_,m.isPickable=!1;break}}),i){const m=i.getBoundingInfo().boundingBox,H=y(t,M).getBoundingInfo().boundingBox.maximum.y+1e-5;a.position.y=m.maximumWorld.y+H+.5,a.position.x=(m.maximumWorld.x-m.minimumWorld.x)/z*e+m.minimumWorld.x-.3,a.position.z=(m.centerWorld.z+m.minimumWorld.z)/2}else a.position.x=-2+e,a.position.y=1.22,a.position.z=.5;a.checkCollisions=!0,a.ellipsoid=new A(.02,.16,.02);const g=y(t,_),h=new D("liquid-material");h.diffuseColor=l,g.material=h;const d=y(t,"Label"),b=y(t,"LabelBack"),f=new F("dynamic texture",256,n);f.uAng=Math.PI;const p=new D("Mat",n);p.diffuseTexture=f,d.material=p,b.material=p;const O="bold 220px monospace";f.drawText(t.name.split("-")[1].toUpperCase(),65,185,O,"black","white");const v=new V("highlight-layer");v.innerGlow=!0,v.outerGlow=!1,v.isEnabled=!1,y(t,M).addBehavior(new oe(v,N.Green())),se(a,a.position.x,a.position.y,a.position.z)};function se(t,e,o,l){let n,i=new U({dragPlaneNormal:new A(0,0,1)});i.useObjectOrientationForDragging=!1,i.moveAttached=!1,i.onDragStartObservable.add(()=>{n&&clearTimeout(n)}),i.onDragObservable.add(a=>{t.moveWithCollisions(a.delta)}),i.onDragEndObservable.add(()=>{n=setTimeout(()=>le(t,e,o,l),ne)}),t.addBehavior(i)}function le(t,e,o,l){t.isPickable=!1;let n=t.name.split("-")[0],i=t.getScene(),a=t.getChildMeshes(),r=a.find(C=>C.name==="cylinder"),s=a.find(C=>C.name==="liquid"),g=s.visibility,h=new u("InvisibilityOfCylinder","visibility",120,u.ANIMATIONTYPE_FLOAT,u.ANIMATIONLOOPMODE_CONSTANT),d=new u("VisibilityOfCylinder","visibility",120,u.ANIMATIONTYPE_FLOAT,u.ANIMATIONLOOPMODE_CONSTANT),b=new u("InvisibilityOfLiquid","visibility",120,u.ANIMATIONTYPE_FLOAT,u.ANIMATIONLOOPMODE_CONSTANT),f=new u("VisibilityOfLiquid","visibility",120,u.ANIMATIONTYPE_FLOAT,u.ANIMATIONLOOPMODE_CONSTANT);const p=[];p.push({frame:0,value:g}),p.push({frame:60,value:0});const O=[];O.push({frame:0,value:0}),O.push({frame:60,value:g});const v=[];v.push({frame:0,value:1}),v.push({frame:60,value:0});const m=[];m.push({frame:0,value:0}),m.push({frame:60,value:1}),r.animations.push(h),r.animations.push(d),s.animations.push(b),s.animations.push(f),h.setKeys(v),d.setKeys(m),b.setKeys(p),f.setKeys(O),i.beginDirectAnimation(r,[h],0,60,!1),i.beginDirectAnimation(s,[b],0,60,!1,void 0,()=>{r.rotation.z=Math.PI*2,t.position.x=e,t.position.y=o,t.position.z=l,r.getAnimationByName(`${n}-rotateAroundZ`),i.beginDirectAnimation(r,[d],0,60,!1),i.beginDirectAnimation(s,[f],0,60,!1,void 0,()=>{t.isPickable=!0})})}function re(t){t.name="clipboard";const e=t.getScene(),o=e.getMeshByName("Table");if(o){const n=o.getBoundingInfo().boundingBox;t.position.y=n.maximumWorld.y+.003}t.rotationQuaternion=null,t.rotation=new A(0,Math.PI/4,0);const l=e.getMeshByName("pivot-Cylinder-A");l&&(t.position.x=l.position.x+.2,t.position.z=l.position.z+.5)}function he(t){var e=new k(N.FromHexString("#0984e3"));e.ignoreChildren=!0;var o=t[0],l=k.MakeNotPickableAndWrapInBoundingBox(o);e.attachedMesh=l,e.onScaleBoxDragObservable.add(()=>{console.log("scaleDrag")}),e.onScaleBoxDragEndObservable.add(()=>{const n=e.attachedMesh;if(n){const i=n.getHierarchyBoundingVectors(!0);console.log("size x:",i.max.x-i.min.x),console.log("size y:",i.max.y-i.min.y),console.log("size z:",i.max.z-i.min.z)}console.log("scaleEnd")}),e.onRotationSphereDragObservable.add(()=>{console.log("rotDrag")}),e.onRotationSphereDragEndObservable.add(()=>{console.log("rotEnd")})}function w(t,e,o){const l=t.find(d=>d.name==="__root__"),n=l.getScene();l.name=o;const i=t.find(d=>d.name==="Label"),a=t.find(d=>d.name==="Placard");a.name=ae;const r=new F("dynamic texture",256,n);r.wAng=-Math.PI/2,r.uAng=Math.PI;const s=new D("Mat",n);s.diffuseTexture=r,i.material=s;const g="bold 220px monospace";r.drawText(l.name.split("-")[1].toUpperCase(),65,185,g,"black","white"),a.addChild(i),a.rotationQuaternion=null,a.rotation=new A(0,Math.PI/2,0);const h=n.getMeshByName("Table");if(h){const d=h.getBoundingInfo().boundingBox;l.position.y=d.maximumWorld.y+.003,l.position.x=(d.maximumWorld.x-d.minimumWorld.x)/z*e+d.minimumWorld.x-.2,l.position.z=(d.centerWorld.z+d.minimumWorld.z)/2+.2}}function de(t,e){let o;return new Promise(l=>{const n="./models/",i="left.glb",a="right.glb";var r={};let s={right:"handR2320",left:"handL2320"};const g=new Y(t);g.addMeshTask("load left hand","",n,i),g.addMeshTask("load right hand","",n,a),g.onTaskSuccess=h=>{console.log("Task:",h.loadedMeshes[0]);for(let d of h.loadedMeshes)r[d.name]=d;console.log("MODELS: ",r),o=h.loadedAnimationGroups,console.log("Scene animation groups: ",t.animationGroups)},g.onTasksDoneObservable.add(()=>{for(let h=0;h<t.animationGroups.length;h++)t.animationGroups[h].pause();e.pointerSelection.detach(),e.input.onControllerAddedObservable.add(h=>{let d=h.inputSource.handedness,b=r[s[d]].parent.parent,f=(Object.keys(r).indexOf(s[d])-1)*2-1;console.log(r[s[d]]),r[s[d]].rotation.y=Math.PI*f,r[s[d]].rotation.z=0,r[s[d]].rotation.x=-Math.PI/4,b.parent=h.grip||h.pointer})}),g.loadAsync().then(()=>{l(o)})})}function ce(t,e,o){let l,n;e.input.onControllerAddedObservable.add(i=>{i.onMotionControllerInitObservable.add(a=>{a.handID=a.handedness;let r=a,s=new $(A.Zero(),A.Zero(),.25);i.getWorldPointerRayToRef(s);const g=a.getComponentOfType("squeeze");g.onButtonStateChangedObservable.add(h=>{if(g.pressed?a.handID==="left"?t.animationGroups[0].goToFrame(h.value*10):a.handID==="right"&&t.animationGroups[7].goToFrame(h.value*10):a.handID==="left"?t.animationGroups[0].goToFrame(1):a.handID==="right"&&t.animationGroups[7].goToFrame(1),g.pressed&&!r.grabbed){console.log("pressed"),r.grabbed=!0,r.meshGrabbed=t.getMeshByName("pivot-Cylinder-A"),i.getWorldPointerRayToRef(s);let d=t.pickWithRay(s);new Z(s).show(t),(d==null?void 0:d.hit)&&d.pickedMesh.name.includes("pivot-Cylinder")&&(l=t.getMeshByName(d.pickedMesh.name),n=l==null?void 0:l.getBehaviorByName("PointerDrag"),console.log("gotCylinder"),n.dragging||t.onBeforeRenderObservable.add(function(){let f=r.lastPosition;if(console.log(f),f){i.getWorldPointerRayToRef(s);let p=s.origin;Math.random()>.9&&console.log(s.origin),l.moveWithCollisions(p.subtract(f))}r.lastPosition=Object.assign({},s.origin)}))}else console.log("Controller: ",a.handID),l&&n.dragging&&(n.releaseDrag(),l=null,n=null),console.log("ITEM: ",h),r.grabbed=!1,r.meshGrabbed=void 0})})})}function ge(t,e){t.onBeforeRenderObservable.add(function(){let n=["A","B","C"];for(let i=0;i<n.length;i++){const a=t.getMeshByName(`pivot-Cylinder-${n[i]}`),r=t.getMeshByName("Table");if(r&&a){const s=r.getBoundingInfo().boundingBox;a.position.z=(s.centerWorld.z+s.minimumWorld.z)/2}}});let o=["A","B","C"],l=[];for(let n of o){const i=t.getMeshByName(`pivot-Cylinder-${n}`);l.push(i);let a=new u(`${n}-rotateAroundZ`,"rotation.z",120,u.ANIMATIONTYPE_FLOAT,u.ANIMATIONLOOPMODE_CONSTANT),r=y(i,M);const s=[];s.push({frame:0,value:Math.PI*2}),s.push({frame:60,value:4.62}),r.animations.push(a),a.setKeys(s);let g=new u(`${n}-resetRotateAroundZ`,"rotation.z",120,u.ANIMATIONTYPE_FLOAT,u.ANIMATIONLOOPMODE_CONSTANT);const h=[];h.push({frame:0,value:4.62}),h.push({frame:60,value:Math.PI*2}),r.animations.push(g),g.setKeys(h)}for(let n=0;n<o.length;n++){const i=t.getMeshByName(`pivot-Cylinder-${o[n]}`),a=i.getBehaviorByName("PointerDrag");let r=[];for(let h of l)h!=i&&r.push(h);let s=y(i,M),g=!1;a.onDragObservable.add(()=>{const h=y(i,M).getBehaviorByName("Highlight");let d=!1;for(let b of r){let f=y(b,"LEFT_COLLISION"),p=y(b,"RIGHT_COLLISION"),O=y(b,M);if(i.intersectsMesh(f)||i.intersectsMesh(p)){d=!0;let v=b.name.split("-")[2],C=`${i.name.split("-")[2]}to${v}`;if(e.tasks[e.currentState].label===C&&(e.tasks[e.currentState].next==="complete"?window.location.assign("."):e.currentState=e.tasks.indexOf(e.tasks.find(B=>B.label==e.tasks[e.currentState].next))),h&&(h.highlightMesh(s),h.highlightMesh(O),i.intersectsMesh(f)?(O.rotation.y=Math.PI,s.rotation.y=0):(O.rotation.y=0,s.rotation.y=Math.PI),!g)){let B=s.getAnimationByName(`${o[n]}-rotateAroundZ`);g=!0,t.beginDirectAnimation(s,[B],0,60,!1,void 0,()=>{})}break}else h.unhighlightMesh(O)}if(d==!1){h.unhighlightMesh(s);let b=s.getAnimationByName(`${o[n]}-resetRotateAroundZ`);g&&(g=!1,t.beginDirectAnimation(s,[b],0,60,!1,void 0,()=>{}))}}),a.onDragEndObservable.add(()=>{const h=y(i,M).getBehaviorByName("Highlight");for(let d of r){let b=y(d,"LEFT_COLLISION"),f=y(d,"RIGHT_COLLISION"),p=y(d,M);if(h.unhighlightMesh(s),h.unhighlightMesh(p),s.intersectsMesh(b)||s.intersectsMesh(f)){let O=s.getAnimationByName(`${o[n]}-resetRotateAroundZ`);s.rotation.z==4.62&&t.beginDirectAnimation(s,[O],0,60,!1,void 0,()=>{})}}})}}var I;class ue{constructor(e){c(this,"flying",!1);c(this,"active",!1);c(this,"camera");c(this,"mesh");c(this,"offset",.3);c(this,"animations");c(this,"returnPosition");c(this,"returnRotation");c(this,"onPointerDownObserver");c(this,"xrCamera");c(this,"attach",(e,o,l,n,i)=>{const a=e.getScene();if(this.mesh=e,!o&&(o=a.activeCamera,!o))throw new Error("The scene has no active camera, and no camera was provided.");this.camera=o,l||(l=this.mesh.position),n||(n=this.mesh.rotation),i&&(this.offset=i),this.returnPosition=l,this.returnRotation=n,this.onPointerDownObserver=a.onPointerObservable.add(this.clipboardClick)});c(this,"detach",()=>{this.mesh.getScene().onPointerObservable.remove(this.onPointerDownObserver)});c(this,"clipboardClick",(e={type:R.POINTERDOWN,pickInfo:{pickedMesh:this.mesh}})=>{var o;if(e.type===R.POINTERDOWN){const l=(o=e.pickInfo)==null?void 0:o.pickedMesh;if(l&&(l===this.mesh||l.isDescendantOf(this.mesh))&&!this.flying){const n=this.active?L/2:0,i=this.active?0:L/2;E(this,I).call(this),this.flying=!0,this.mesh.billboardMode==P.BILLBOARDMODE_ALL?this.mesh.billboardMode=P.BILLBOARDMODE_NONE:this.mesh.billboardMode=P.BILLBOARDMODE_ALL,this.mesh.getScene().beginDirectAnimation(this.mesh,this.animations,n,i,!1,void 0,()=>{this.flying=!1,this.active=!this.active})}}});c(this,"calculateTargetPositionWithOffset",e=>{if(this.xrCamera!==void 0&&this.xrCamera.state===Q.IN_XR){const a=this.xrCamera.camera._position.subtract(this.returnPosition).scale(1-e/A.Distance(this.returnPosition,this.xrCamera.camera._position));return this.returnPosition.add(a)}const l=this.camera._position.subtract(this.returnPosition).scale(1-e/A.Distance(this.returnPosition,this.camera._position));return this.returnPosition.add(l)});c(this,"setClipboardUp",()=>new A(3.1468286,4.6617744,1.680752));S(this,I,()=>{const e=this.animations.find(({name:i})=>i==="translate"),o=this.animations.find(({name:i})=>i==="rotate"),l=[{frame:0,value:this.returnPosition},{frame:L/2,value:this.calculateTargetPositionWithOffset(this.offset)}],n=[{frame:0,value:this.returnRotation},{frame:L/2,value:this.setClipboardUp()}];e.setKeys(l),o.setKeys(n)});const o=new u("translate","position",L,u.ANIMATIONTYPE_VECTOR3),l=new u("rotate","rotation",L,u.ANIMATIONTYPE_VECTOR3);this.animations=[o,l],this.xrCamera=e}get name(){return"FlyToCamera"}init(){}}I=new WeakMap;const me=new W("","",[{next:"CtoA",label:"BtoC"},{next:"complete",label:"CtoA"}]);class fe{constructor(){c(this,"handAnimation");c(this,"sop");c(this,"models");this.models=[{fileName:"NewLaboratoryUNFINISHED.glb",callback:e=>this.createRoom(e),label:"floor"},{fileName:"TLLGraduatedCylinderWithLabel.glb",callback:e=>x(e[0],1,"Cylinder-A",new N(1,0,0)),label:"Cylinder-A"},{fileName:"TLLGraduatedCylinderWithLabel.glb",callback:e=>x(e[0],2,"Cylinder-B",new N(0,1,0)),label:"Cylinder-B"},{fileName:"TLLGraduatedCylinderWithLabel.glb",callback:e=>x(e[0],3,"Cylinder-C",new N(0,0,1)),label:"Cylinder-C"},{fileName:"clipBoardWithPaperCompressedTexture.glb",callback:e=>re(e[0])},{fileName:"Placard_Label.glb",callback:e=>w(e,1,"Placard-A")},{fileName:"Placard_Label.glb",callback:e=>w(e,2,"Placard-B")},{fileName:"Placard_Label.glb",callback:e=>w(e,3,"Placard-C")}].map(function(e){return Object.assign({},{fileName:"LabBench.glb",root:"./models/",callback:he,label:"NoLabel"},e)}),this.createScene().then(this.processScene)}async processScene(e){let o=e.getCameraByName("camera"),l=e.getLightByName("light1"),n={};o.speed=.16;let i=setInterval(()=>{l.intensity>=1?clearInterval(i):l.intensity+=.1},60);const a=["WallsandFloor","WallsAndFloor.001"],r=[];for(let g of a){console.log(g);const h=e.getMeshByName(g);h&&r.push(h)}let s={floorMeshes:r,inputOptions:{doNotLoadControllerMeshes:!0}};n=await e.createDefaultXRExperienceAsync(s),de(e,n).then(g=>{const h=e.getMeshByName("clipboard");if(n){const d=new ue(n.baseExperience);h.addBehavior(d)}ge(e,me),ce(e,n)})}createRoom(e){const o=["WallsandFloor","WallsAndFloor.001","Table","Roof","Countertop","Walls"];let l,n;for(let i of o){const a=e.find(r=>r.name===i);if(a&&(a.checkCollisions=!0,a.name==="Table")){const s=a.getBoundingInfo().boundingBox.center.x;l=a.getScene(),n=l.getCameraByName("camera"),n.position.x=s-.7}}}createScene(){let e=this.models;return console.log(e),new Promise(o=>{var l=document.getElementById("canvas"),n=new X(l,!0,{stencil:!0}),i=new j(n);i.debugLayer.show(),i.collisionsEnabled=!0,window.addEventListener("resize",function(){n.resize()}),ie(i);const a=new J("camera",new A(0,1.84,-1.134),i);a.ellipsoid=new A(.4,.7,.4),a.attachControl(l,!0),a.applyGravity=!0,a.minZ=0,a.speed=0,a.checkCollisions=!0,a.keysUp.push(87),a.keysDown.push(83),a.keysLeft.push(65),a.keysRight.push(68);var r=new ee("light1",new A(1,1,0),i);r.intensity=0,Promise.all(this.models.map(s=>new Promise(g=>te.ImportMesh("",s.root,s.fileName,i,function(h){s.mesh=h,g(h)})))).then(()=>{this.models.map(s=>{s.callback(s.mesh),o(i)})}),window.addEventListener("keydown",s=>{s.shiftKey&&s.ctrlKey&&s.altKey&&s.keyCode===73&&(i.debugLayer.isVisible()?i.debugLayer.hide():i.debugLayer.show())}),n.runRenderLoop(()=>{i.render()})})}}new fe;
