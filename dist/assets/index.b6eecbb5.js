var H=Object.defineProperty;var K=(l,e,i)=>e in l?H(l,e,{enumerable:!0,configurable:!0,writable:!0,value:i}):l[e]=i;var g=(l,e,i)=>(K(l,typeof e!="symbol"?e+"":e,i),i),U=(l,e,i)=>{if(!e.has(l))throw TypeError("Cannot "+i)};var k=(l,e,i)=>(U(l,e,"read from private field"),i?i.call(l):e.get(l)),W=(l,e,i)=>{if(e.has(l))throw TypeError("Cannot add the same private member more than once");e instanceof WeakSet?e.add(l):e.set(l,i)};import{M as T,V as y,S as _,D as q,H as V,C as B,P as Y,A as m,B as z,a as Z,R as Q,b as F,c as E,W as X,E as j,d as J,U as ee,e as te,f as ie}from"./vendor.8cc9db75.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))n(o);new MutationObserver(o=>{for(const t of o)if(t.type==="childList")for(const s of t.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&n(s)}).observe(document,{childList:!0,subtree:!0});function i(o){const t={};return o.integrity&&(t.integrity=o.integrity),o.referrerpolicy&&(t.referrerPolicy=o.referrerpolicy),o.crossorigin==="use-credentials"?t.credentials="include":o.crossorigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function n(o){if(o.ep)return;o.ep=!0;const t=i(o);fetch(o.href,t)}})();window.exports=window;function L(l,e){return l.getChildMeshes().find(i=>i.name===e)||null}function ne(l){var n;const e=new URLSearchParams(document.location.search);(e.get("debug")===""||((n=e.get("debug"))==null?void 0:n.toLowerCase())==="true")&&l.debugLayer.show()}const C=60,oe=50,$=3,w="cylinder",G="liquid",ae="placard";class se{constructor(e,i){g(this,"highlightLayer");g(this,"highlightColor");g(this,"highlightReferences");g(this,"highlightingMeshes");g(this,"mesh");g(this,"attach",e=>{this.mesh=e,this.highlightLayer.addMesh(this.mesh,this.highlightColor)});g(this,"detach",()=>{this.highlightLayer.removeMesh(this.mesh),this.highlightReferences=0,this.highlightingMeshes=[]});g(this,"highlightSelf",()=>{this.highlightLayer.isEnabled=!0});g(this,"unhighlightSelf",()=>{this.highlightReferences||(this.highlightLayer.isEnabled=!1)});g(this,"highlightMesh",e=>{if(this.highlightingMeshes.find(n=>n===e))return!1;const i=e.getBehaviorByName(this.name);return i?(i.highlightReferences+=1,i.highlightSelf(),this.highlightingMeshes.push(e),!0):!1});g(this,"unhighlightMesh",e=>{const i=e.getBehaviorByName(this.name);if(!i)return!1;const n=this.highlightingMeshes.findIndex(o=>o===e);return n===-1?!1:(i.highlightReferences-=1,i.unhighlightSelf(),this.highlightingMeshes.splice(n,1),!0)});this.highlightLayer=e,this.highlightColor=i,this.highlightReferences=0,this.highlightingMeshes=[]}get name(){return"Highlight"}init(){}}class D{constructor(e,i,n,o){g(this,"name");g(this,"position");g(this,"mesh");console.log(e),this.name=n;const t=e.getScene(),s=t.getMeshByName("Table");let a=T.CreateSphere(`pivot-Cylinder-${n}`,{segments:2,diameterX:.15,diameterY:.33,diameterZ:.2},e.getScene());a.visibility=0,e.name=n,e.parent=a,e.rotationQuaternion=null;let h=T.CreateBox("LEFT_COLLISION");h.scaling.y=.01,h.scaling.x=.04,h.scaling.z=.04,h.parent=a,h.position.y+=.3,h.position.x-=.15,h.visibility=0;let r=T.CreateBox("RIGHT_COLLISION");if(r.scaling.y=.01,r.scaling.x=.04,r.scaling.z=.04,r.parent=a,r.position.y+=.3,r.position.x+=.15,r.visibility=0,e.getChildMeshes().forEach(u=>{switch(u.name){case"BeakerwOpacity":u.name=w,u.rotationQuaternion=null,u.rotation.z=2*Math.PI,u.isPickable=!1;break;case"BeakerLiquid":u.name=G,u.isPickable=!1;break}}),s){const u=s.getBoundingInfo().boundingBox,N=L(e,w).getBoundingInfo().boundingBox.maximum.y+1e-5;a.position.y=u.maximumWorld.y+N,a.position.x=(u.maximumWorld.x-u.minimumWorld.x)/$*i+u.minimumWorld.x-.3,a.position.z=(u.centerWorld.z+u.minimumWorld.z)/2,this.position={...a.position}}else a.position.x=-2+i,a.position.y=1.22,a.position.z=.5;a.checkCollisions=!0,a.ellipsoid=new y(.02,.16,.02),this.mesh=a;const c=L(e,G),d=new _("liquid-material");d.diffuseColor=o,c.material=d;const b=L(e,"Label"),v=L(e,"LabelBack");console.log("Label:",b);const p=new q("dynamic texture",256,t);p.uAng=Math.PI;const f=new _("Mat",t);f.diffuseTexture=p,b.material=f,v.material=f;const A="bold 220px monospace";p.drawText(e.name.toUpperCase(),65,185,A,"black","white");const O=new V("highlight-layer");O.innerGlow=!0,O.outerGlow=!1,O.isEnabled=!1,L(e,w).addBehavior(new se(O,B.Green()))}addDragCollision(){let e=new Y({dragPlaneNormal:new y(0,0,1)});e.useObjectOrientationForDragging=!1,e.moveAttached=!1,e.onDragStartObservable.add(()=>{}),e.onDragObservable.add(i=>{this.mesh.moveWithCollisions(i.delta)}),e.onDragEndObservable.add(()=>{this.fadeAndRespawn()}),this.mesh.addBehavior(e)}fadeAndRespawn(e=oe){setTimeout(()=>{this.mesh.isPickable=!1;let i=this.mesh.name.split("-")[0],n=this.mesh.getScene(),o=this.mesh.getChildMeshes(),t=o.find(f=>f.name==="cylinder"),s=o.find(f=>f.name==="liquid"),a=new m("InvisibilityOfCylinder","visibility",120,m.ANIMATIONTYPE_FLOAT,m.ANIMATIONLOOPMODE_CONSTANT),h=new m("VisibilityOfCylinder","visibility",120,m.ANIMATIONTYPE_FLOAT,m.ANIMATIONLOOPMODE_CONSTANT),r=new m("InvisibilityOfLiquid","visibility",120,m.ANIMATIONTYPE_FLOAT,m.ANIMATIONLOOPMODE_CONSTANT),c=new m("VisibilityOfLiquid","visibility",120,m.ANIMATIONTYPE_FLOAT,m.ANIMATIONLOOPMODE_CONSTANT);const d=[{frame:0,value:1},{frame:60,value:0}],b=[{frame:0,value:0},{frame:60,value:1}],v=[{frame:0,value:1},{frame:60,value:0}],p=[{frame:0,value:0},{frame:60,value:1}];t.animations=[a,h],s.animations=[r,c],a.setKeys(v),h.setKeys(p),r.setKeys(d),c.setKeys(b),n.beginDirectAnimation(t,[a],0,60,!1),n.beginDirectAnimation(s,[r],0,60,!1,void 0,()=>{t.rotation.z=Math.PI*2,console.log(this.mesh,this.position),this.mesh.position.x=this.position._x,this.mesh.position.y=this.position._y,this.mesh.position.z=this.position._z,t.getAnimationByName(`${i}-rotateAroundZ`),n.beginDirectAnimation(t,[h],0,60,!1),n.beginDirectAnimation(s,[c],0,60,!1,void 0,()=>{this.mesh.isPickable=!0})})},e)}}function le(l){l.name="clipboard";const e=l.getScene(),i=e.getMeshByName("Table");if(i){const o=i.getBoundingInfo().boundingBox;l.position.y=o.maximumWorld.y+.003}l.rotationQuaternion=null,l.rotation=new y(0,Math.PI/4,0);const n=e.getMeshByName("pivot-Cylinder-A");n&&(l.position.x=n.position.x+.2,l.position.z=n.position.z+.5)}function re(l){var e=new z(B.FromHexString("#0984e3"));e.ignoreChildren=!0;var i=l[0],n=z.MakeNotPickableAndWrapInBoundingBox(i);e.attachedMesh=n,e.onScaleBoxDragObservable.add(()=>{console.log("scaleDrag")}),e.onScaleBoxDragEndObservable.add(()=>{const o=e.attachedMesh;if(o){const t=o.getHierarchyBoundingVectors(!0);console.log("size x:",t.max.x-t.min.x),console.log("size y:",t.max.y-t.min.y),console.log("size z:",t.max.z-t.min.z)}console.log("scaleEnd")}),e.onRotationSphereDragObservable.add(()=>{console.log("rotDrag")}),e.onRotationSphereDragEndObservable.add(()=>{console.log("rotEnd")})}function S(l,e,i){const n=l.find(d=>d.name==="__root__"),o=n.getScene();n.name=i;const t=l.find(d=>d.name==="Label"),s=l.find(d=>d.name==="Placard");s.name=ae;const a=new q("dynamic texture",256,o);a.wAng=-Math.PI/2,a.uAng=Math.PI;const h=new _("Mat",o);h.diffuseTexture=a,t.material=h;const r="bold 220px monospace";a.drawText(n.name.split("-")[1].toUpperCase(),65,185,r,"black","white"),s.addChild(t),s.rotationQuaternion=null,s.rotation=new y(0,Math.PI/2,0);const c=o.getMeshByName("Table");if(c){const d=c.getBoundingInfo().boundingBox;n.position.y=d.maximumWorld.y+.003,n.position.x=(d.maximumWorld.x-d.minimumWorld.x)/$*e+d.minimumWorld.x-.2,n.position.z=(d.centerWorld.z+d.minimumWorld.z)/2+.2}}function he(l,e){let i;return new Promise(n=>{const o="./models/";let t="";var s={};let a=["left","right"];const h=new Z(l);a.forEach(c=>{h.addMeshTask(`load ${c} hand`,"",o,`${c}${t}.glb`)});let r=0;h.onTaskSuccess=c=>{console.log(c),console.log(c.loadedMeshes),s[a[r]]=c.loadedMeshes[1],c.loadedMeshes[1].name=a[r],console.log("MODELS new code: ",s),i=c.loadedAnimationGroups;for(let d=0;d<c.loadedAnimationGroups.length;d++)c.loadedAnimationGroups[d].name=`${a[r]}_${c.loadedAnimationGroups[d].name}`;console.log("Scene animation groups: ",l.animationGroups),r++},h.onTasksDoneObservable.add(()=>{for(let c=0;c<l.animationGroups.length;c++)l.animationGroups[c].pause();e.pointerSelection.detach(),e.input.onControllerAddedObservable.add(c=>{let d=c.inputSource.handedness;console.log(s[d]);let b=s[d].parent.parent;s[d].isPickable=!1,console.log(b);let v=(Object.keys(s).indexOf(d)-1)*2-1;console.log(s[d]),s[d].rotation.y=Math.PI*v,s[d].rotation.z=0,s[d].rotation.x=-Math.PI/4,b.parent=c.grip||c.pointer})}),h.loadAsync().then(()=>{n(i)})})}function de(l,e,i,n,o){let t;function s(a){for(let h of["A","B","C"]){let r=l.getMeshByName(`pivot-Cylinder-${h}`);if(a.intersectsMesh(r,!1))return r}return!1}e.input.onControllerAddedObservable.add(a=>{a.onMotionControllerInitObservable.add(h=>{let r=h;r.handID=h.handedness;let c=new Q(y.Zero(),y.Zero(),.25);const d=h.getComponentOfType("squeeze"),b=h.getComponentOfType("trigger");function v(p,f){r.lastPosition=null,clearInterval(f),console.log("Dropped test tube"),r.grabbed=!1,r.meshGrabbed=void 0,console.log("Current hand: ",r),console.log(p),console.log(o),p&&o.find(O=>{console.log(O,p);let u=p.name.split("-");return O.name==u[u.length-1]}).fadeAndRespawn(100)}[b,d].forEach(p=>{p.onButtonStateChangedObservable.add(f=>{let A=r.handID,O;console.log("Trigger pressed: ",f.value);let u={left:"Fist",right:"Grip"},M=l.animationGroups.find((N,I)=>(console.log(I,A),N.name===`${A}_${u[A]}`));console.log(M._to),console.log(l.animationGroups[0],l.animationGroups[7]),M.goToFrame(f.value*(M._to-1)+1);let P=s(l.getMeshByName(r.handID));if(f.value>0&&(r.lastPosition=Object.assign({},c.origin)),f.value>0&&!r.grabbed){if(P){t=P,r.meshGrabbed=t,r.grabbed=!0,a.getWorldPointerRayToRef(c),r.lastPosition=Object.assign({},c.origin),console.log("Current hand: ",r);let N=r.lastPosition,I=c.origin;I!=N&&(O=setInterval(()=>{let R=r.lastPosition;a.getWorldPointerRayToRef(c),R&&t&&t.moveWithCollisions(I.subtract(R)),!s(l.getMeshByName(A))&&t&&(console.log(A,t),v(t,O),t=null),r.lastPosition=Object.assign({},c.origin)},10))}}else(!f.value||!P)&&t&&(console.log(A,t),v(t,O),t=null)})})})})}function ce(l,e){l.onBeforeRenderObservable.add(function(){let n=["A","B","C"];for(let o=0;o<n.length;o++){const t=l.getMeshByName(`pivot-Cylinder-${n[o]}`),s=l.getMeshByName("Table");if(s&&t){const a=s.getBoundingInfo().boundingBox;t.position.z=(a.centerWorld.z+a.minimumWorld.z)/2}}});let i=["A","B","C"];for(let n of i){const o=l.getMeshByName(`pivot-Cylinder-${n}`);let t=new m(`${n}-rotateAroundZ`,"rotation.z",120,m.ANIMATIONTYPE_FLOAT,m.ANIMATIONLOOPMODE_CONSTANT),s=L(o,w);const a=[];a.push({frame:0,value:Math.PI*2}),a.push({frame:60,value:4.62}),s.animations.push(t),t.setKeys(a);let h=new m(`${n}-resetRotateAroundZ`,"rotation.z",120,m.ANIMATIONTYPE_FLOAT,m.ANIMATIONLOOPMODE_CONSTANT);const r=[];r.push({frame:0,value:4.62}),r.push({frame:60,value:Math.PI*2}),s.animations.push(h),h.setKeys(r)}}var x;class ge{constructor(e){g(this,"flying",!1);g(this,"active",!1);g(this,"camera");g(this,"mesh");g(this,"offset",.3);g(this,"animations");g(this,"returnPosition");g(this,"returnRotation");g(this,"onPointerDownObserver");g(this,"xrCamera");g(this,"attach",(e,i,n,o,t)=>{const s=e.getScene();if(this.mesh=e,!i&&(i=s.activeCamera,!i))throw new Error("The scene has no active camera, and no camera was provided.");this.camera=i,n||(n=this.mesh.position),o||(o=this.mesh.rotation),t&&(this.offset=t),this.returnPosition=n,this.returnRotation=o,this.onPointerDownObserver=s.onPointerObservable.add(this.clipboardClick)});g(this,"detach",()=>{this.mesh.getScene().onPointerObservable.remove(this.onPointerDownObserver)});g(this,"clipboardClick",(e={type:F.POINTERDOWN,pickInfo:{pickedMesh:this.mesh}})=>{var i;if(e.type===F.POINTERDOWN){const n=(i=e.pickInfo)==null?void 0:i.pickedMesh;if(n&&(n===this.mesh||n.isDescendantOf(this.mesh))&&!this.flying){const o=this.active?C/2:0,t=this.active?0:C/2;k(this,x).call(this),this.flying=!0,this.mesh.billboardMode==E.BILLBOARDMODE_ALL?this.mesh.billboardMode=E.BILLBOARDMODE_NONE:this.mesh.billboardMode=E.BILLBOARDMODE_ALL,this.mesh.getScene().beginDirectAnimation(this.mesh,this.animations,o,t,!1,void 0,()=>{this.flying=!1,this.active=!this.active})}}});g(this,"calculateTargetPositionWithOffset",e=>{if(this.xrCamera!==void 0&&this.xrCamera.state===X.IN_XR){const s=this.xrCamera.camera._position.subtract(this.returnPosition).scale(1-e/y.Distance(this.returnPosition,this.xrCamera.camera._position));return this.returnPosition.add(s)}const n=this.camera._position.subtract(this.returnPosition).scale(1-e/y.Distance(this.returnPosition,this.camera._position));return this.returnPosition.add(n)});g(this,"setClipboardUp",()=>new y(3.1468286,4.6617744,1.680752));W(this,x,()=>{const e=this.animations.find(({name:t})=>t==="translate"),i=this.animations.find(({name:t})=>t==="rotate"),n=[{frame:0,value:this.returnPosition},{frame:C/2,value:this.calculateTargetPositionWithOffset(this.offset)}],o=[{frame:0,value:this.returnRotation},{frame:C/2,value:this.setClipboardUp()}];e.setKeys(n),i.setKeys(o)});const i=new m("translate","position",C,m.ANIMATIONTYPE_VECTOR3),n=new m("rotate","rotation",C,m.ANIMATIONTYPE_VECTOR3);this.animations=[i,n],this.xrCamera=e}get name(){return"FlyToCamera"}init(){}}x=new WeakMap;class me{constructor(){g(this,"handAnimation");g(this,"sop");g(this,"models");g(this,"cylinders");this.cylinders=[],this.models=[{fileName:"NewLaboratoryUNFINISHED.glb",callback:e=>this.createRoom(e),label:"floor"},{fileName:"clipBoardWithPaperCompressedTexture.glb",callback:e=>le(e[0])},{fileName:"Placard_Label.glb",callback:e=>S(e,1,"Placard-A")},{fileName:"Placard_Label.glb",callback:e=>S(e,2,"Placard-B")},{fileName:"Placard_Label.glb",callback:e=>S(e,3,"Placard-C")},{fileName:"TLLGraduatedCylinderWithLabel.glb",callback:e=>this.cylinders.push(new D(e[0],1,"A",new B(1,0,0))),label:"Cylinder-A"},{fileName:"TLLGraduatedCylinderWithLabel.glb",callback:e=>this.cylinders.push(new D(e[0],2,"B",new B(0,1,0))),label:"Cylinder-B"},{fileName:"TLLGraduatedCylinderWithLabel.glb",callback:e=>this.cylinders.push(new D(e[0],3,"C",new B(0,0,1))),label:"Cylinder-C"}].map(function(e){return Object.assign({},{fileName:"LabBench.glb",root:"./models/",callback:re,label:"NoLabel"},e)}),this.createScene().then(e=>{let i={};for(let n of["A","B","C"])i[`pivot-Cylinder-${n}`]=Object.assign({},e.getMeshByName(`pivot-Cylinder-${n}`).position);this.processScene(e,i,this.cylinders)})}async processScene(e,i,n){let o=e.getCameraByName("camera"),t=e.getLightByName("light1"),s={};o.speed=.16;let a=setInterval(()=>{t.intensity>=1?clearInterval(a):t.intensity+=.1},60);const h=["WallsandFloor","WallsAndFloor.001"],r=[];for(let d of h){console.log(d);const b=e.getMeshByName(d);b&&r.push(b)}let c={floorMeshes:r,inputOptions:{doNotLoadControllerMeshes:!0}};s=await e.createDefaultXRExperienceAsync(c),s.pointerSelection.displayLaserPointer=!1,s.pointerSelection.displaySelectionMesh=!1,he(e,s).then(d=>{const b=e.getMeshByName("clipboard");if(s){const v=new ge(s.baseExperience);b.addBehavior(v)}console.log(this.models[2]),ce(e),de(e,s,d,i,n)})}createRoom(e){const i=["WallsandFloor","WallsAndFloor.001","Table","Roof","Countertop","Walls"];let n,o;for(let t of i){const s=e.find(a=>a.name===t);if(s&&(s.checkCollisions=!0,s.name==="Table")){const h=s.getBoundingInfo().boundingBox.center.x;n=s.getScene(),o=n.getCameraByName("camera"),o.position.x=h-.7}}}createScene(){return new Promise(e=>{var i=document.getElementById("canvas"),n=new j(i,!0,{stencil:!0}),o=new J(n);o.debugLayer.show(),o.collisionsEnabled=!0,window.addEventListener("resize",function(){n.resize()}),ne(o);const t=new ee("camera",new y(0,1.84,-1.134),o);t.ellipsoid=new y(.4,.7,.4),t.attachControl(i,!0),t.applyGravity=!0,t.minZ=0,t.speed=0,t.checkCollisions=!0,t.keysUp.push(87),t.keysDown.push(83),t.keysLeft.push(65),t.keysRight.push(68);var s=new te("light1",new y(1,1,0),o);s.intensity=0,Promise.all(this.models.map(a=>new Promise(h=>ie.ImportMesh("",a.root,a.fileName,o,function(r){a.mesh=r,h(r)})))).then(()=>{let a=[];this.models.map(h=>{a.push(h.callback(h.mesh)),e(o)})}),window.addEventListener("keydown",a=>{a.shiftKey&&a.ctrlKey&&a.altKey&&a.keyCode===73&&(o.debugLayer.isVisible()?o.debugLayer.hide():o.debugLayer.show())}),n.runRenderLoop(()=>{o.render()})})}}new me;
