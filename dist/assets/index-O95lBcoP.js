import{O as p,H as se,M as ue,C as y,S as fe,V as u,a as me,T as B,W as F,P as be,A as w,F as ge,b as pe,c as ve,d as L,e as ye,f as Oe,g as Me,R as we,h as Ce,B as Pe,D as ne,i as D,j as U,G as Y,k as Z,l as Se,m as Ie,n as Be,U as Te,o as Ae,E as z}from"./vendor-06WRrF46.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const a of document.querySelectorAll('link[rel="modulepreload"]'))s(a);new MutationObserver(a=>{for(const n of a)if(n.type==="childList")for(const r of n.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&s(r)}).observe(document,{childList:!0,subtree:!0});function t(a){const n={};return a.integrity&&(n.integrity=a.integrity),a.referrerPolicy&&(n.referrerPolicy=a.referrerPolicy),a.crossOrigin==="use-credentials"?n.credentials="include":a.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function s(a){if(a.ep)return;a.ep=!0;const n=t(a);fetch(a.href,n)}})();window.exports=window;function N(...i){}class M{mesh;interactionManager;grabObserver;activationObserver;onGrabStateChangedObservable=new p;onActivationStateChangedObservable=new p;#e=null;#t;#a=!0;#s=!1;#i=!1;constructor(e,t){this.#t=e,this.interactionManager=t}static get name(){return"InteractableXR"}get name(){return M.name}get activatable(){return this.#t}get active(){return this.#i}set activatable(e){!e&&this.#i&&this.#l(),this.#t=e}init=()=>{};attach=e=>{this.mesh=e,this.grabObserver=this.interactionManager.onGrabStateChangeObservable.add(([t,s])=>{this.#a&&(s===f.GRAB?(this.#n(t),this.#e=t):s===f.DROP&&(this.#r(t),this.#e=null))}),this.activationObserver=this.interactionManager.onActivationStateChangeObservable.add(([t,s])=>{!this.#a||!this.#t||(s===S.ACTIVE?this.#o():s===S.INACTIVE&&this.#l())}),this.interactionManager.interactableMeshes.includes(this.mesh)||this.interactionManager.interactableMeshes.push(this.mesh)};detach=()=>{this.#s&&this.#r(this.#e),this.#i&&this.#l(),this.grabObserver.remove(),this.activationObserver.remove();const e=this.interactionManager.interactableMeshes.findIndex(t=>t===this.mesh);e!==-1&&this.interactionManager.interactableMeshes.splice(e,1)};#n=e=>{this.#s=!0,this.onGrabStateChangedObservable.notifyObservers([e,f.GRAB])};#r=e=>{this.#i&&this.#l(),this.#s=!1,this.onGrabStateChangedObservable.notifyObservers([e,f.DROP])};#h=()=>{};#c=()=>{};#o=()=>{this.#t&&(this.#h(),this.#i=!0,this.onActivationStateChangedObservable.notifyObservers(S.ACTIVE))};#l=()=>{this.#t&&(this.#c(),this.#i=!1,this.onActivationStateChangedObservable.notifyObservers(S.INACTIVE))};get enabled(){return this.#a}disable=()=>{this.#s&&this.#r(this.#e),this.#i&&this.#l(),this.#a=!1};enable=()=>{this.#a=!0}}var f=(i=>(i[i.GRAB=0]="GRAB",i[i.DROP=1]="DROP",i))(f||{}),S=(i=>(i[i.ACTIVE=0]="ACTIVE",i[i.INACTIVE=1]="INACTIVE",i))(S||{});class xe{onGrabStateChangeObservable=new p;onActivationStateChangeObservable=new p;xrExperience;grabbedMeshMap={};handMeshMap={};handIntersectingMap={};interactableMeshes=[];#e;#t;constructor(e,t){this.xrExperience=e,this.xrExperience.input.controllers.forEach(this.#n),this.xrExperience.input.onControllerAddedObservable.add(this.#n),this.#e=t,this.#t=new se("interaction-highlight-layer")}#a(e){const t=e.behaviors.find(s=>s instanceof M);return!!t&&t.activatable}#s=e=>{Object.values(this.handIntersectingMap).includes(e)||this.#t.removeMesh(e)};#i=(e,t)=>{this.#t.hasMesh(e)||this.#t.addMesh(e,t)};#n=e=>{this.#e.onBeforeRenderObservable.add(()=>{const t=this.handMeshMap[e.uniqueId];if(t){const s=this.interactableMeshes.find(n=>t.intersectsMesh(n)),a=this.handIntersectingMap[e.uniqueId];!this.grabbedMeshMap[e.uniqueId]&&s&&s instanceof ue?a!==s&&(this.handIntersectingMap[e.uniqueId]=s,a&&this.#s(a),this.#i(s,y.Gray())):(this.handIntersectingMap[e.uniqueId]=null,a&&this.#s(a))}}),e.motionController&&this.#r(e.motionController,e),e.onMotionControllerInitObservable.add(t=>{this.#r(t,e)})};#r=(e,t)=>{const s=e.getComponentOfType("squeeze");s&&s.onButtonStateChangedObservable.add(()=>{s.changes.pressed&&this.#h(s.pressed,t)});const a=e.getMainComponent();a&&a.onButtonStateChangedObservable.add(()=>{a.changes.pressed&&this.#c(a.pressed,t)})};#h=(e,t)=>{if(e){const s=this.handMeshMap[t.uniqueId];if(s){const a=this.interactableMeshes.find(n=>s.intersectsMesh(n));if(a){const n=Object.keys(this.grabbedMeshMap).find(r=>this.grabbedMeshMap[r]===a);if(n){const r=this.xrExperience.input.controllers.find(o=>o.uniqueId===n);this.#o(a,[r.pointer,1]),this.grabbedMeshMap[n]=null}this.grabbedMeshMap[t.uniqueId]=a,this.#o(a,[t.pointer,0])}}}else this.grabbedMeshMap[t.uniqueId]&&(this.#o(this.grabbedMeshMap[t.uniqueId],[t.pointer,1]),this.grabbedMeshMap[t.uniqueId]=null)};#c=(e,t)=>{const s=this.grabbedMeshMap[t.uniqueId];if(s&&this.#a(s)){const a=s.behaviors.find(n=>n instanceof M);e?(a.active&&this.#l(s,[null,1]),this.#l(s,[t.pointer,0])):a.active&&this.#l(s,[null,1])}};#o=(e,t)=>{if(e.isDisposed()){const n=Object.keys(this.grabbedMeshMap).find(r=>this.grabbedMeshMap[r]===e);n&&(this.handMeshMap[n]=null);return}const s=e.behaviors.find(n=>n instanceof M);if(!s)throw new Error("InteractionXRManager: mesh must have an instance of InteractableXRBehavior.");const a=s.grabObserver;this.onGrabStateChangeObservable.notifyObserver(a,t)};#l=(e,t)=>{if(e.isDisposed()){const n=Object.keys(this.grabbedMeshMap).find(r=>this.grabbedMeshMap[r]===e);n&&(this.handMeshMap[n]=null);return}const s=e.getBehaviorByName(M.name);if(!s)throw new Error("InteractionXRManager: mesh must have an instance of InteractableXRBehavior.");const a=s.activationObserver;this.onActivationStateChangeObservable.notifyObserver(a,t)}}const Ee=["room","placard","cylinder","clipboard","fire-extinguisher"];function ae(i=Ee){return Promise.all(i.map(e=>fe.ImportMeshAsync("","/models/",`${e}.glb`).then(t=>{const s=t.meshes.find(a=>a.id==="__root__");return s.id=e,s.name=e,t})))}function re(i){const t=i.getScene().meshes.find(s=>s.name==="Table");if(t){const s=t.getBoundingInfo().boundingBox;i.position.x=s.center.x-.5,i.position.y=s.center.y*2+.46,i.position.z=-3}else i.position=u.Zero()}function J(i,e){return i.id<e.id?-1:i.id>e.id?1:0}function ke(i){const e=i.filter(r=>r.id.split("-").length===2&&r.id.split("-")[0]==="cylinder").sort(J),t=i.filter(r=>r.name.split("-")[0]==="placard"&&!r.name.includes("placard-base")).sort(J),s=i.find(r=>r.id==="clipboard"),a=i.find(r=>r.name==="Table"),n=i.find(r=>r.id==="fire-extinguisher");if(a){const r=a.getBoundingInfo().boundingBox;e.forEach((o,h)=>{const l=o.getBoundingInfo().boundingBox,c=o.position.y-l.minimum.y;o.position.copyFromFloats(r.minimum.x+(h+1)*(r.maximum.x-r.minimum.x)/(e.length+2),r.maximum.y+c,(2*r.minimum.z+r.center.z)/3),o.rotationQuaternion=null,o.rotation.copyFromFloats(Math.PI,0,0)}),t.forEach((o,h)=>{const c=o.getChildMeshes().find(b=>b.name==="placard-base").getBoundingInfo().boundingBox,m=o.position.y-c.minimum.y;o.position.y=r.maximum.y+m,o.position.x=r.minimum.x+(h+1)*(r.maximum.x-r.minimum.x)/(t.length+2)+.2,o.position.z=(2*r.minimum.z+r.center.z)/3+.2,o.rotationQuaternion=null,o.rotation.copyFromFloats(0,Math.PI/2,0)}),s.position.copyFromFloats(e[0].position.x+.5,r.maximum.y,e[0].position.z+.3),s.rotationQuaternion=null,s.rotation.copyFromFloats(0,-Math.PI/2,Math.PI),n.position.copyFromFloats(3.73,1.77,-2.51),n.rotationQuaternion=null,n.rotation.copyFromFloats(0,0,Math.PI)}}const G="./",Re=`${G}sound/mi_explosion_03_hpx.mp3`,Fe=`${G}sound/ding-idea-40142.mp3`,Le=`${G}sound/success.mp3`,Ne=`${G}images/sopTemplate.svg`;var I=(i=>(i[i.SUCCESSFUL=0]="SUCCESSFUL",i[i.FAILURE=1]="FAILURE",i[i.RESET=2]="RESET",i))(I||{});class q{name;description;#e;optional;subtasks;subtaskObservers;onTaskStateChangeObservable;constructor(e,t,s,a=!1){if(this.name=e,this.description=t,this.#e=2,this.optional=a,s.some(n=>n.length===0))throw new Error(`Task ${this.name}: subtask partition must not be empty.`);this.subtasks=s,this.onTaskStateChangeObservable=new p,this.subtaskObservers=this.subtasks.map(n=>n.map((r,o)=>{const h=r.onTaskStateChangeObservable.add((l,c)=>{switch(l){case 1:r.optional||this.fail();break;case 0:if(o!==0&&n[o-1].status!==0){c.skipNextObservers=!0;break}this.subtasks.every(b=>b.at(-1).status===0)&&this.#t();break}});return r.onTaskStateChangeObservable.makeObserverTopPriority(h),h}))}fail=()=>{if(this.#e!==2)throw new Error(`Attempted to fail a Task (${this.name}) which has already succeeded or failed.`);if(this.onTaskStateChangeObservable.notifyObservers(1))N(`Failing Task ${this.name}`),this.#e=1;else throw new Error(`Task ${this.name}: An observer skipped following observers.`)};succeed=()=>{if(this.subtasks.length)throw new Error(`Task ${this.name} has subtasks and cannot be manually succeeded.`);this.#t()};#t=()=>{if(this.#e!==2)throw new Error(`Attempted to succeed a Task (${this.name}) which has already succeeded or failed.`);this.#e=0,this.onTaskStateChangeObservable.notifyObservers(this.#e)?N(`Succeeding Task ${this.name}`):(this.#e=2,this.fail())};reset=()=>{this.subtasks.forEach(e=>{e.forEach(t=>t.reset())}),this.#e=2,this.onTaskStateChangeObservable.notifyObservers(this.#e)};get failed(){return this.#e===1}get successful(){return this.#e===0}get status(){return this.#e}}const De={[I.SUCCESSFUL]:"correct",[I.FAILURE]:"incorrect",[I.RESET]:"empty"};class Q{templateString;data;basicTasks;rootTask;#e;mesh;#t;#a;constructor(e,t,s,a){this.templateString=e,this.#t=me.compile(this.templateString),this.data=t,this.rootTask=s,this.basicTasks=a,this.#e=[],this.#a=0}static get name(){return"UpdateClipboard"}get name(){return Q.name}init(){}#s=e=>this.#i.find(t=>t.taskName===e)||null;get#i(){return this.data.items[1].sublist}attach=e=>{this.mesh=e,this.#n(),this.#e.push(...this.basicTasks.map(t=>t.onTaskStateChangeObservable.add(s=>{const a=this.#s(t.name);a.indicator=De[s],this.#n()}))),this.#e.push(this.rootTask.onTaskStateChangeObservable.add(t=>{}))};detach=()=>{for(let e of this.#e)e.remove()};#n=()=>{const e=document.createElement("template"),t=this.#t(this.data);e.innerHTML=t;const a=new XMLSerializer().serializeToString(e.content),n="data:image/svg+xml;utf8,"+encodeURIComponent(a),r=B.LoadFromDataString(`clipboard-texture-${this.#a++}`,n,this.mesh.getScene(),void 0,void 0,void 0,B.LINEAR_LINEAR_MIPNEAREST,()=>{r.uScale=1,r.vScale=-1,r.hasAlpha=!0,this.#r(r)})};#r=e=>{const t=this.mesh.material;t.diffuseTexture!==e&&(t.diffuseTexture&&t.diffuseTexture.dispose(),t.diffuseTexture=e)}}class Ge{highlightLayer;mesh;otherMesh;color;constructor(e){this.highlightLayer=new se("highlight-layer"),this.highlightLayer.innerGlow=!0,this.highlightLayer.outerGlow=!1,this.color=e}static get name(){return"Highlight"}get name(){return"Highlight"}init(){}attach=e=>{this.mesh=e};detach=()=>{this.unhighlightAll()};highlightSelf=()=>{this.highlightLayer.hasMesh(this.mesh)||this.highlightLayer.addMesh(this.mesh,this.color)};highlightOther=e=>{this.highlightLayer.hasMesh(e)||(this.otherMesh=e,this.highlightLayer.addMesh(this.otherMesh,this.color))};unhighlightSelf=()=>{this.highlightLayer.hasMesh(this.mesh)&&this.highlightLayer.removeMesh(this.mesh)};unhighlightOther=()=>{this.otherMesh&&this.highlightLayer.hasMesh(this.otherMesh)&&this.highlightLayer.removeMesh(this.otherMesh)};unhighlightAll=()=>{this.highlightLayer.hasMesh(this.mesh)&&this.highlightLayer.removeMesh(this.mesh),this.otherMesh&&this.highlightLayer.hasMesh(this.otherMesh)&&this.highlightLayer.removeMesh(this.otherMesh)}}class k{mesh;#e;#t;#a;#s;#i=[];#n=[];onGrabStateChangedObservable=new p;onActivationStateChangedObservable=new p;#r=f.DROP;#h=S.INACTIVE;targets=[];#c;#o;constructor(e=!1,t=!0,s){this.#o=e,this.#c=t,s&&(this.#t=s,this.#a=this.#t.xrExperience)}get name(){return"Interactable"}get activatable(){return this.#o}get moveAttached(){return this.#c}set activatable(e){const t=this.#e;typeof t.activatable=="boolean"&&(t.activatable=e),this.#o=e}get activationState(){return this.#h}get grabState(){return this.#r}init=()=>{};attach=e=>{this.mesh=e;let t;this.#a?(this.#s=this.#a.baseExperience.onStateChangedObservable.add(this.#l),t=this.#a.baseExperience.state):t=F.NOT_IN_XR,this.#l(t)};detach=()=>{for(this.#e&&this.mesh.removeBehavior(this.#e);this.#i.length;)this.#i.pop().remove();for(;this.#n.length;)this.#n.pop().remove();this.#s?.remove()};#l=e=>{switch(e){case F.IN_XR:if(this.#t){const s=new M(this.#o,this.#t);this.#d(s);const a=s.onGrabStateChangedObservable.add(r=>{const[o,h]=r;if(this.#r=h,this.#c)switch(this.#r){case f.GRAB:const l=this.mesh.rotation.clone();this.mesh.setParent(o),this.mesh.position.setAll(0),this.mesh.rotation.copyFrom(l);for(const c of o.getChildMeshes(!0))c!==this.mesh&&(c.isVisible=!1);break;case f.DROP:this.mesh.setParent(null);for(const c of o.getChildMeshes(!0))c.isVisible=!0;break}this.onGrabStateChangedObservable.notifyObservers(r)});this.#i.push(a);const n=s.onActivationStateChangedObservable.add(r=>{this.#h=r,this.onActivationStateChangedObservable.notifyObservers(r)});this.#n.push(n)}break;case F.NOT_IN_XR:const t=new be({dragPlaneNormal:new u(0,0,1)});t.moveAttached=this.#c,this.#d(t),this.#i.push(t.onDragStartObservable.add(()=>{this.#r=f.GRAB,this.onGrabStateChangedObservable.notifyObservers([null,f.GRAB])})),this.#i.push(t.onDragEndObservable.add(()=>{this.#r=f.DROP,this.onGrabStateChangedObservable.notifyObservers([null,f.DROP])}));break}};#d=e=>{if(this.#e){for(this.mesh.removeBehavior(this.#e);this.#i.length;)this.#i.pop().remove();for(;this.#n.length;)this.#n.pop().remove()}return this.#e=e,this.mesh.addBehavior(this.#e)};disable=()=>{this.#e instanceof M?this.#e.disable():this.#e.name==="PointerDrag"&&(this.#e.releaseDrag(),this.#e.enabled=!1)};enable=()=>{this.#e instanceof M?this.#e.enable():this.#e.name==="PointerDrag"&&(this.#e.enabled=!0)}}class H{mesh;constructor(){}static get name(){return"Pourable"}get name(){return"Pourable"}init(){}attach=e=>{this.mesh=e};detach=()=>{};getPouringPosition=e=>{if(e.x<this.mesh.absolutePosition.x){const t=new u(-.2,.3,0);return t.addInPlace(this.mesh.absolutePosition),t}else{const t=new u(.2,.3,0);return t.addInPlace(this.mesh.absolutePosition),t}}}class oe{mesh;#e;#t;#a;#s;#i;onBeforePourObservable;onMidPourObservable;onAfterPourObservable;pourDelay=1e3;#n=0;animating=!1;onAnimationChangeObservable;constructor(e,t){this.#e=new k(!1,!0,t||void 0),this.#e.targets.push(...e),this.#t=new Ge(y.Green()),this.onBeforePourObservable=new p,this.onMidPourObservable=new p,this.onAfterPourObservable=new p,this.onAnimationChangeObservable=new p}static get name(){return"Pouring"}get name(){return"Pouring"}init(){}attach=e=>{this.mesh=e,this.mesh.addBehavior(this.#e),this.mesh.addBehavior(this.#t);const t=e.getScene(),s=this.#e.targets;this.#a=this.#e.onGrabStateChangedObservable.add(([a,n])=>{n===f.GRAB?this.#s=t.onBeforeRenderObservable.add(()=>{const r=this.#r(s);this.#h(r)}):n===f.DROP&&(this.#h(null),this.#s&&(this.#s.remove(),this.#s=null))})};detach=()=>{this.#a.remove(),this.#s&&this.#s.remove()};#r(e){const t=e.filter(n=>{const r=this.mesh.absolutePosition.y>n.absolutePosition.y,o=!!n.getBehaviorByName(H.name),h=n.getBehaviorByName(k.name)?.grabState!==f.GRAB,l=this.mesh.intersectsMesh(n);return r&&o&&h&&l});let s=null,a=Number.POSITIVE_INFINITY;for(const n of t){const r=u.Distance(this.mesh.absolutePosition,n.absolutePosition);r<a&&(s=n,a=r)}return s}#h(e){this.#i!==e&&(this.#i&&(this.#t.unhighlightAll(),this.#n&&(clearTimeout(this.#n),this.#n=0)),this.#i=e,this.#i&&(this.#t.highlightSelf(),this.#t.highlightOther(this.#i),this.#n=setTimeout(()=>{this.#n=0,this.pour()},this.pourDelay)))}pour=()=>{if(!this.#i)throw new Error("PouringBehavior: attempted pour with no current target.");const e=this.#i.getBehaviorByName(H.name);if(!e)throw new Error("PouringBehavior: target is not pourable.");const t=this.mesh.checkCollisions,s=this.#i;this.onBeforePourObservable.notifyObservers(s),this.mesh.checkCollisions=!1;const a=this.mesh.absolutePosition.x<this.#i.absolutePosition.x?ce:le,n=a.getKeys(),r=he(n).frame,o=Ue(n).frame,h=W(n).frame,l=e.getPouringPosition(this.mesh.absolutePosition);this.mesh.setAbsolutePosition(l),this.animating=!0,this.onAnimationChangeObservable.notifyObservers(this.animating),this.#e.disable(),this.mesh.getScene().beginDirectAnimation(this.mesh,[a],r,o,!1,1,()=>{this.onMidPourObservable.notifyObservers(s),this.mesh.getScene().beginDirectAnimation(this.mesh,[a],o,h,!1,1,()=>{this.#e.enable(),this.animating=!1,this.onAnimationChangeObservable.notifyObservers(this.animating),this.mesh.checkCollisions=t,this.onAfterPourObservable.notifyObservers(s)})})}}const A=30;function he(i){if(i.length===0)return null;let e=i[0];for(let t of i)t.frame<e.frame&&(e=t);return e}function W(i){if(i.length===0)return null;let e=i[0];for(let t of i)t.frame>e.frame&&(e=t);return e}function Ue(i){if(i.length===0)return null;const e=he(i),t=W(i),s=(e.frame+t.frame)/2;return W(i.filter(n=>n.frame<=s))}const _e=[{frame:0,value:new u(Math.PI,0,0)},{frame:A,value:new u(Math.PI,0,-Math.PI/2)},{frame:2*A,value:new u(Math.PI,0,0)}],Ve=[{frame:0,value:new u(Math.PI,0,0)},{frame:A,value:new u(Math.PI,0,Math.PI/2)},{frame:2*A,value:new u(Math.PI,0,0)}],le=new w("pour-neg-z","rotation",A,w.ANIMATIONTYPE_VECTOR3,w.ANIMATIONLOOPMODE_CONSTANT),ce=new w("pour-pos-z","rotation",A,w.ANIMATIONTYPE_VECTOR3,w.ANIMATIONLOOPMODE_CONSTANT);le.setKeys(_e,!0);ce.setKeys(Ve,!0);class x{mesh;extinguished=!1;onFireObservable=new p;constructor(){}static get name(){return"Fire"}get name(){return x.name}init(){}attach=e=>{this.mesh=e};extinguish=()=>{this.extinguished=!0,this.onFireObservable.notifyObservers(!1),this.mesh.isVisible=!1};detach=()=>{}}function $e(){const i=new ge("fire");i.diffuseTexture=new B("images/fire.png"),i.distortionTexture=new B("images/distortion.png"),i.opacityTexture=new B("images/candleopacity.png"),i.speed=5;const e=new pe("spotlight",new u(2,2,2),new u(-1,-2,-1),3,1),t=new ve(10240,e);t.usePercentageCloserFiltering=!0,t.bias=100,t.transparencyShadow=!0;const s=L.CreatePlane("fire-plane",{width:4,height:3});s.receiveShadows=!0,s.position.copyFromFloats(-4.1,0,-1.6),s.rotationQuaternion=null,s.rotation.copyFromFloats(0,-Math.PI/2,0),s.material=i,s.material.shadowDepthWrapper=new ye(s.material),t.getShadowMap().renderList.push(s);const a=new x;return s.addBehavior(a),s}class ze{rect;text;button;constructor(e,t,s){this.rect=e,this.text=t,this.button=s}setVisible(e=!0){this.rect.isVisible=e,this.text.isVisible=e,this.button.isVisible=e}}class _{advancedTexture;welcomePrompt;gameFinishPrompt;camera;screen;scene;constructor(e){this.scene=e,this.camera=e.activeCamera}createPromptWithButton(e,t=null,...s){this.screen=L.CreatePlane("Start",{size:1}),this.screen.parent=this.camera,this.screen.position=new u(0,0,.5),this.advancedTexture=Oe.CreateForMesh(this.screen);let a=new Me("container");var n=new we;n.width=.5,n.height=.2,n.color="cyan",n.thickness=4,n.background="white",a.addControl(n);var r=new Ce;r.text=e,r.color="black",r.fontSize="17px",r.resizeToFit=!0,r.textWrapping=!0,r.paddingBottomInPixels=40,r.paddingLeftInPixels=15,r.paddingRightInPixels=15,n.addControl(r);var o=Pe.CreateSimpleButton("but1","Click to dismiss");o.width="150px",o.height="40px",o.color="black",o.cornerRadius=20,o.background="white",o.topInPixels=40;let h=new ze(n,r,o),l=this.scene.getMeshByName("Start");function c(){a.dispose(),l.dispose(),t&&t(...s)}return h.button.onPointerUpObservable.add(function(){c()}),h.button.onPointerEnterObservable.add(()=>{o.background="grey"}),h.button.onPointerOutObservable.add(()=>{o.background="white"}),a.addControl(h.button),a.addControl(o),this.advancedTexture.addControl(a),h}}class K{static createWelcomeScreen(e){new _(e).createPromptWithButton("Welcome to the game. Please click on the clipboard on the table to get started.").setVisible(!0)}static createSuccessScreen(e,t=null,...s){new _(e).createPromptWithButton("Congratulations! You have completed the SOP",t,...s).setVisible(!0)}static createFailureScreen(e,t=null,...s){new _(e).createPromptWithButton("Oops! You mixed the wrong chemicals which resulted in a fire",t,...s).setVisible(!0)}}const R={sop:null,taskList:null,json:null};class qe{mesh;startPos;#e;#t;#a;#s=null;#i;#n;#r;constructor(e=1.25){this.#e=e,this.startPos=u.Zero(),this.#n=[{name:"Invisibility",startValue:1},{name:"Visibility",startValue:0}],this.#n.forEach(t=>{t.animation=new w(t.name,"visibility",60,w.ANIMATIONTYPE_FLOAT,w.ANIMATIONLOOPMODE_CONSTANT),t.animation.setKeys([{frame:0,value:t.startValue},{frame:30,value:t.startValue?0:1}])})}init(){}static get name(){return"FadeAndRespawn"}get name(){return"FadeAndRespawn"}attach(e){this.mesh=e,this.#t=this.mesh.getBehaviorByName("Interactable"),this.#i=this.mesh.getBehaviorByName("Pouring"),this.#r=this.mesh.getScene(),this.#a=this.#t.onGrabStateChangedObservable.add(([t,s])=>{s===f.DROP&&(this.#i.animating?this.#s=this.#i.onAnimationChangeObservable.addOnce(a=>{if(a)throw new Error("Received notication of starting animating before receiving notification of stopping animating.");this.#h(),this.#s=null}):this.#h())})}detach(){this.#a.remove(),this.#s&&this.#s.remove()}#h(){if(Math.abs(u.Distance(this.mesh.position,this.startPos))<=.15){this.#o();return}this.#r.beginDirectHierarchyAnimation(this.mesh,!1,[this.#n.find(t=>t.name==="Invisibility").animation],0,60,!1,this.#e,()=>{this.#o(),this.#c()})}#c(){this.#r.beginDirectHierarchyAnimation(this.mesh,!1,[this.#n.find(e=>e.name==="Visibility").animation],0,60,!1,this.#e)}#o(){this.mesh.position.copyFrom(this.startPos),this.mesh.rotation.copyFromFloats(Math.PI,0,0)}}function de(i,e){const t=i.getChildMeshes().find(a=>a.id.split("-").pop()==="liquid"),s=new D("liquid-material");s.diffuseColor=e,t.material=s}function V(i,e,t){de(i,e);const s=new ne("dynamic-texture",256,null,!0,B.LINEAR_LINEAR_MIPNEAREST);s.uAng=Math.PI;const a=new D("cylinder-label-material");a.diffuseTexture=s;const n="bold 250px monospace",r=i.getChildMeshes().find(c=>c.id.split("-").pop()==="label");r.material=a,s.drawText(i.id.split("-").pop().toUpperCase(),0,225,n,"black","white");const o=new oe(t,E),h=new H,l=new qe;i.addBehavior(o),i.addBehavior(h),i.addBehavior(l)}const He=(i,e)=>{let t=[],s=[],a={};const n={ding:new U("ding",Fe),explosion:new U("explosion",Re),fanfare:new U("fanfare",Le)};n.ding.onEndedObservable.add(()=>{n.explosion.play()}),n.explosion.onEndedObservable.add(()=>{n.fanfare.play()}),n.ding.play(),n.fanfare.play(),e.forEach(r=>{r.logic&&r.logic.taskType==="pouring"&&We(i,r,t,s,a)}),Ke(i,s,n),t.forEach(r=>{r.onTaskStateChangeObservable.add(o=>{o===I.SUCCESSFUL&&!n.fanfare.isPlaying&&!n.explosion.isPlaying&&(n.ding.stop(),n.ding.play())})}),R.taskList=t},ee=(i,e,t)=>{i===e?t.succeed():t.fail()},We=(i,e,t,s,a)=>{let n=e.taskName,r=e.text,o=e.logic,h=[];o.subtasks.forEach(b=>{let g=a[b];g&&h.push(g)});let l;h.length?l=new q(n,r,[[...h]]):l=new q(n,r,[]),t.push(l),s.push(l),a[n]=l;let m=i.getMeshByName(o.from).getBehaviorByName(oe.name);m.onMidPourObservable.add(b=>{N(`Pouring mesh name: ${m.mesh.name}`),N(`Poured mesh name: ${b.name}`);const g=b.getChildMeshes().find(C=>C.id.split("-").pop()==="liquid").material.diffuseColor,O=m.mesh.getChildMeshes().find(C=>C.id.split("-").pop()==="liquid").material.diffuseColor,T=new y((g.r+O.r)/2,(g.g+O.g)/2,(g.b+O.b)/2);de(b,T),m.animating?m.onAnimationChangeObservable.addOnce(()=>{ee(b.name,o.to,l)}):ee(b.name,o.to,l)})},Ke=(i,e,t)=>{R.sop=new q("SOP","Standard operating procedure for lab safety.",[e]),R.sop.onTaskStateChangeObservable.add(s=>{switch(s){case I.SUCCESSFUL:K.createSuccessScreen(i,()=>X(i)),t.fanfare.stop(),t.fanfare.play();break;case I.FAILURE:t.explosion.stop(),t.explosion.play();const n=$e().getBehaviorByName(x.name);n&&n.onFireObservable.add(r=>{r||(K.createFailureScreen(i,()=>X(i)),t.fanfare.stop(),t.fanfare.play())});break;case I.RESET:break}})};function Xe(i,e){const t=i.getScene(),s=new D("clipboard-material",t);s.emissiveColor.copyFrom(y.White()),s.useAlphaFromDiffuseTexture=!0;const a=i.getChildMeshes().find(n=>n.name===`${i.id}-plane`);a.material=s,fetch("./src/sopData.json").then(n=>n.json()).then(n=>{let r=n.items[1].sublist;He(t,r);const o=new Q(e,n,R.sop,R.taskList);a.addBehavior(o)})}function $(i){const e=i.getScene(),t=i.name.split("-")[1],s=i.getChildMeshes().find(h=>h.name==="Placard"),a=i.getChildMeshes().find(h=>h.name==="Label");s.id="placard-base",s.name="placard-base";const n=new ne("dynamic texture",256,e);n.wAng=-Math.PI/2,n.uAng=Math.PI;const r=new D("Mat",e);r.diffuseTexture=n,a.material=r,n.drawText(t.toUpperCase(),65,185,"bold 220px monospace","black","white"),s.addChild(a)}function je(i){i.keysUp.push(87),i.keysDown.push(83),i.keysLeft.push(65),i.keysRight.push(68)}const Qe=["WallsandFloor","Floor","Table","Roof","Countertop","Walls","FumehoodBase_LP","FumehoodInner_LP","FumehoodInnerHook_LP"];function Ye(i){i.getChildMeshes().forEach(e=>{Qe.includes(e.name)&&(e.checkCollisions=!0)})}function Ze(i){const e=i.getScene().activeCamera;Ye(i),re(e),je(e)}class Je{particleSystem;#e;constructor(e){this.#e=e,this.#t()}#t(){let e=this.#e.getScene(),t;Y.IsSupported?(t=new Y("particles",{capacity:15e3},e),t.activeParticleCount=2e3):t=new Z("particles",2e3,e),t.particleTexture=new B("https://raw.githubusercontent.com/PatrickRyanMS/BabylonJStextures/master/FFV/smokeParticleTexture.png",e),t.emitRate=150,t.createPointEmitter(new u(-3.5,-3.5,0),new u(3.5,3.5,0)),t.gravity=new u(0,0,20),t.isLocal=!0,t.minLifeTime=.3,t.maxLifeTime=.3,t.minEmitPower=.7,t.maxEmitPower=.5,t.minSize=.01,t.maxSize=.02;let s=.3;t.addSizeGradient(s,s,s),t.blendMode=Z.BLENDMODE_STANDARD,t.emitter=this.#e,this.particleSystem=t}start(){this.particleSystem.start()}stop(){this.particleSystem.stop()}}const et=2;function tt(i){const e=new k(!0,!0,E);let t=new Je(i);i.addBehavior(e);let s=null;const a=i.getScene(),n=L.CreateSphere("debug-sphere-1",{diameter:.1}),r=L.CreateSphere("debug-sphere-2",{diameter:.1});n.isVisible=!1,r.isVisible=!1,e.onActivationStateChangedObservable.add(o=>{o===S.ACTIVE?(t.start(),s=a.onBeforeRenderObservable.add(()=>{const h=new Se(i.absolutePosition,i.getDirection(Ie.Z).normalize(),et);n.setAbsolutePosition(h.origin),r.setAbsolutePosition(h.origin.add(h.direction.scale(h.length)));const l=a.pickWithRay(h,c=>{const m=c.getBehaviorByName(x.name);return!!(m&&!m.extinguished)});if(l.hit){const c=l.pickedMesh.getBehaviorByName(x.name);c.extinguished||c.extinguish()}})):o===S.INACTIVE&&(t.stop(),s&&(s.remove(),s=null))})}function it(i){const e=i.getChildMeshes(!0)[0];e.rotationQuaternion=null;const t=new k(!1,!1,E);let s=null;const a=i.getScene();t.onGrabStateChangedObservable.add(([n,r])=>{r===f.GRAB?s=a.onBeforeRenderObservable.add(()=>{const o=n.getAbsolutePosition().subtract(e.getAbsolutePosition());if(o.y=0,o.x>0)return;const h=o.z<0?0:Math.PI,l=-Math.atan(o.x/o.z);e.rotation.copyFromFloats(0,l+h,0)}):r===f.DROP&&s&&(s.remove(),s=null)}),e.addBehavior(t)}const st=1.93,nt=1.3,te=(i,e)=>{let t=Math.floor(i.position.y*100)/100;t+e>=nt&&t+e<=st&&(i.position.y+=e)},at=i=>{const e=i.getScene();let t=null,s=null;const a=new k(!1,!1,E);i.addBehavior(a),a.onGrabStateChangedObservable.add(([n,r])=>{if(r==f.GRAB){const o=i.getBehaviorByName("PointerDrag");if(o&&(s=o.onDragObservable.add(h=>{let l=h.delta.y;te(i,l)})),n){let h=u.Zero();h.copyFrom(n.getAbsolutePosition()),t=e.onBeforeRenderObservable.add(()=>{const l=n.getAbsolutePosition().subtract(h);let c=Math.floor(l.y*100)/100;te(i,c),h.copyFrom(n.getAbsolutePosition())})}}else r==f.DROP&&(s&&s.remove(),t&&t.remove())})};function rt(i){const e=i.find(d=>d.name==="room"),t=i.find(d=>d.name==="placard"),s=i.find(d=>d.name==="cylinder").getChildMeshes(!0)[0],a=i.find(d=>d.name==="clipboard").getChildMeshes(!0)[0],n=i.find(d=>d.name==="fire-extinguisher").getChildMeshes(!0)[0],r=i.find(d=>d.name==="FireCabinet"),o=i.find(d=>d.name==="Glass Divider");Ze(e),at(o);const h=a.parent;h.id="clipboard-root",h.name=h.id,a.setParent(null),h.dispose(!0),ht(a),fetch(Ne).then(d=>d.text()).then(d=>{Xe(a,d)});const l=t.clone(`${t.name}-c`,t.parent),c=t.clone(`${t.name}-b`,t.parent),m=t;l.id=l.name,c.id=c.name,m.name+="-a",m.id=m.name,l.getChildMeshes().forEach(d=>d.name=d.name.split(".")[1]),c.getChildMeshes().forEach(d=>d.name=d.name.split(".")[1]),$(l),$(c),$(m),i.push(l,c);const b=s.parent;s.setParent(null),b.dispose(!0);const g=s.clone(`${s.id}-c`,null),O=s.clone(`${s.id}-b`,null),T=s;ot([T,O,g],["a","b","c"]),V(g,y.Blue(),[T,O]),V(O,y.Green(),[T,g]),V(T,y.Red(),[O,g]);const C=n.parent;C.id="fire-extinguisher-root",C.name=C.id,n.setParent(null),C.dispose(),n.id="fire-extinguisher",n.name=n.id,tt(n),it(r),i.push(g,O)}function ot(i,e){i.forEach((t,s)=>{t.id=`cylinder-${e[s]}`,t.name=t.id,t.getChildMeshes().forEach(a=>{switch(a.id.split(".").pop()){case"BeakerLiquid":a.id=`${t.id}-liquid`,a.name=a.id;break;case"Label":a.id=`${t.id}-label`;break;case"LabelBack":a.id=`${t.id}-labelback`;break}})})}function ht(i){i.id="clipboard",i.name=i.id,i.getChildMeshes().forEach(e=>{switch(e.id){case"Plane":e.id=`${i.id}-plane`,e.name=e.id;break;case"Clipper":e.id=`${i.id}-clip`,e.name=e.id;break;case"horizontalScrew":e.id=`${i.id}-screw`,e.name=e.id;break;case"metalThingy":e.id=`${i.id}-metal`,e.name=e.id;break}})}function lt(i){i.ellipsoid=new u(.4,.7,.4),i.applyGravity=!0,i.minZ=0,i.speed=.16,i.checkCollisions=!0,i.needMoveForGravity=!1}function ct(i,e=!1){i.collisionsEnabled=!0}async function dt(i,e){const t=await ae([i,e]);let s=null,a=null;for(const n of t){const r=n.meshes.find(h=>h.id===i||h.id===e);for(const h of n.animationGroups)h.name+=`-${r.name}`,h.pause();const[o]=r.getChildMeshes();if(!o)throw new Error(`Cannot collapse the root mesh of ${r.name}`);if(o.id=r.id,o.name=r.name,o.setParent(null),r.dispose(!0),o.name===i)s=o;else if(o.name===e)a=o;else throw new Error("Base mesh name is invalid. This shouldn't be possible.")}if(!s)throw new Error("No left hand mesh found.");if(!a)throw new Error("No right hand mesh found.");return{left:s,right:a}}async function ut(i){let e=!1;i.pointerSelection.laserPointerDefaultColor=y.Green(),i.pointerSelection.laserPointerPickedColor=y.Green(),i.pointerSelection.selectionMeshDefaultColor=y.Green(),i.pointerSelection.selectionMeshPickedColor=y.Green(),i.pointerSelection.displayLaserPointer=e,i.pointerSelection.displaySelectionMesh=e,window.addEventListener("keydown",n=>{n.keyCode===73&&(e=!e,i.pointerSelection.displayLaserPointer=e,i.pointerSelection.displaySelectionMesh=e)});const a=await dt("plasticGlovesTexturedLeft","plasticGlovesTexturedRight");i.baseExperience.onStateChangedObservable.add(n=>{F.IN_XR}),i.baseExperience.camera.onAfterCameraTeleport.add(()=>{i.baseExperience.camera.position.y=i.baseExperience.camera.realWorldHeight}),i.input.onControllerAddedObservable.add(n=>{ft(n,a[`${n.inputSource.handedness}`])})}function ft(i,e){e.isPickable=!1,mt(i,e,i.inputSource.handedness)}function mt(i,e,t){e.setParent(i.pointer),e.rotationQuaternion=null,t!=="none"?e.rotation.copyFromFloats(Math.PI,0,Math.PI/2):e.rotation.copyFromFloats(0,0,0),i.motionController&&ie(i.motionController,e),i.onMotionControllerInitObservable.add(s=>{ie(s,e)}),E.handMeshMap[i.uniqueId]=e}function ie(i,e){const t=i.getComponentOfType("squeeze"),s=e.getScene().animationGroups.find(a=>a.name===`Fist-${e.name}`);t.onButtonStateChangedObservable.add(a=>{const n=s.from+(s.to-s.from)*a.value;s.goToFrame(n)})}let P,E;const v=[];async function bt(i){const e=new Be(i),t=new Te("camera",new u(0,1,-1.134),e),s=new Ae("light1",new u(1,1,0),e);ct(e,!0),lt(t),e.activeCamera=t,e.activeCamera.attachControl(!0),z.audioEngine.useCustomUnlockedButton=!0,s.intensity=0;const a={inputOptions:{doNotLoadControllerMeshes:!0},pointerSelectionOptions:{enablePointerSelectionOnAllControllers:!0}};if("xr"in window.navigator){P=await e.createDefaultXRExperienceAsync(a),E=new xe(P,e),ut(P),v.push(...e.meshes.map(r=>r.name));for(const r of P.input.controllers)v.push(r.pointer.name),r.grip&&v.push(r.grip.name);P.input.onControllerAddedObservable.add(r=>{v.push(r.pointer.name),r.grip&&v.push(r.grip.name)}),P.input.onControllerRemovedObservable.add(r=>{let o=v.findIndex(h=>h===r.pointer.name);o!==-1&&v.splice(o,1),r.grip&&(o=v.findIndex(h=>h===r.grip.name),o!==-1&&v.splice(o,1))}),v.push("plasticGlovesTexturedLeft","plasticGlovesTexturedRight","laserPointer")}await X(e),K.createWelcomeScreen(e);const n=document.querySelector("div.splash");return n.textContent="Click to start!",n.addEventListener("click",()=>{n.classList.add("hide"),z.audioEngine.audioContext.resume()},!1),e}function gt(i){let e=setInterval(()=>{i.intensity>=1?clearInterval(e):i.intensity+=.1},60)}async function X(i){const e=i.getLightByName("light1");e.intensity=0;const t=i.activeCamera,s=i.meshes.filter(o=>!v.includes(o.name));for(const o of s)o.dispose();const n=(await ae()).map(o=>o.meshes).flat();return rt(n),ke(n),re(t),n.filter(o=>o.id.split("-").length===2&&o.id.split("-")[0]==="cylinder").forEach(o=>{let h=o.getBehaviorByName("FadeAndRespawn");h&&h.startPos.copyFrom(o.position)}),"xr"in window.navigator&&(P.teleportation.removeFloorMeshByName("Floor"),P.teleportation.addFloorMesh(i.getMeshByName("Floor"))),gt(e),i}function pt(i){window.addEventListener("resize",function(){i.resize()})}const vt=document.getElementById("canvas"),j=new z(vt,!0,{stencil:!0});pt(j);bt(j).then(i=>{j.runRenderLoop(()=>i.render())});
