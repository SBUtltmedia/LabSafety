var F=Object.defineProperty;var H=(t,e,n)=>e in t?F(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n;var c=(t,e,n)=>(H(t,typeof e!="symbol"?e+"":e,n),n),q=(t,e,n)=>{if(!e.has(t))throw TypeError("Cannot "+n)};var S=(t,e,n)=>(q(t,e,"read from private field"),n?n.call(t):e.get(t)),E=(t,e,n)=>{if(e.has(t))throw TypeError("Cannot add the same private member more than once");e instanceof WeakSet?e.add(t):e.set(t,n)};import{M as x,V as O,S as D,D as W,H as K,C as M,P as U,A as p,B as k,a as _,b as P,W as V,R as Y,E as $,c as G,U as Z,d as X,e as Q}from"./vendor.b3121dfc.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))s(o);new MutationObserver(o=>{for(const a of o)if(a.type==="childList")for(const r of a.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&s(r)}).observe(document,{childList:!0,subtree:!0});function n(o){const a={};return o.integrity&&(a.integrity=o.integrity),o.referrerpolicy&&(a.referrerPolicy=o.referrerpolicy),o.crossorigin==="use-credentials"?a.credentials="include":o.crossorigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function s(o){if(o.ep)return;o.ep=!0;const a=n(o);fetch(o.href,a)}})();window.exports=window;function C(t,e){return t.getChildMeshes().find(n=>n.name===e)||null}function j(t){var s;const e=new URLSearchParams(document.location.search);(e.get("debug")===""||((s=e.get("debug"))==null?void 0:s.toLowerCase())==="true")&&t.debugLayer.show()}document.location.href.includes("github");const L=60,J=50,z=3,B="cylinder",R="liquid",ee="placard";class te{constructor(e,n){c(this,"highlightLayer");c(this,"highlightColor");c(this,"highlightReferences");c(this,"highlightingMeshes");c(this,"mesh");c(this,"attach",e=>{this.mesh=e,this.highlightLayer.addMesh(this.mesh,this.highlightColor)});c(this,"detach",()=>{this.highlightLayer.removeMesh(this.mesh),this.highlightReferences=0,this.highlightingMeshes=[]});c(this,"highlightSelf",()=>{this.highlightLayer.isEnabled=!0});c(this,"unhighlightSelf",()=>{this.highlightReferences||(this.highlightLayer.isEnabled=!1)});c(this,"highlightMesh",e=>{if(this.highlightingMeshes.find(s=>s===e))return!1;const n=e.getBehaviorByName(this.name);return n?(n.highlightReferences+=1,n.highlightSelf(),this.highlightingMeshes.push(e),!0):!1});c(this,"unhighlightMesh",e=>{const n=e.getBehaviorByName(this.name);if(!n)return!1;const s=this.highlightingMeshes.findIndex(o=>o===e);return s===-1?!1:(n.highlightReferences-=1,n.unhighlightSelf(),this.highlightingMeshes.splice(s,1),!0)});this.highlightLayer=e,this.highlightColor=n,this.highlightReferences=0,this.highlightingMeshes=[]}get name(){return"Highlight"}init(){}}const T=(t,e,n,s)=>{const o=t.getScene(),a=o.getMeshByName("Table");let r=x.CreateSphere(`pivot-${n}`,{diameterX:.15,diameterY:.33,diameterZ:.2},t.getScene());r.visibility=0,t.name=n,t.parent=r,t.rotationQuaternion=null;let g=x.CreateBox("LEFT_COLLISION");g.scaling.y=.01,g.scaling.x=.04,g.scaling.z=.04,g.parent=r,g.position.y+=.3,g.position.x-=.15,g.visibility=0;let i=x.CreateBox("RIGHT_COLLISION");if(i.scaling.y=.01,i.scaling.x=.04,i.scaling.z=.04,i.parent=r,i.position.y+=.3,i.position.x+=.15,i.visibility=0,t.getChildMeshes().forEach(f=>{switch(f.name){case"BeakerwOpacity":f.name=B,f.rotationQuaternion=null,f.rotation.z=2*Math.PI,f.isPickable=!1;break;case"BeakerLiquid":f.name=R,f.isPickable=!1;break}}),a){const f=a.getBoundingInfo().boundingBox,v=C(t,B).getBoundingInfo().boundingBox.maximum.y+1e-5;r.position.y=f.maximumWorld.y+v,r.position.x=(f.maximumWorld.x-f.minimumWorld.x)/z*e+f.minimumWorld.x-.3,r.position.z=(f.centerWorld.z+f.minimumWorld.z)/2}else r.position.x=-2+e,r.position.y=1.22,r.position.z=.5;r.checkCollisions=!0,r.ellipsoid=new O(.02,.16,.02);const y=C(t,R),h=new D("liquid-material");h.diffuseColor=s,y.material=h;const l=C(t,"Label"),d=new W("dynamic texture",256,o);d.uAng=Math.PI;const m=new D("Mat",o);m.diffuseTexture=d,l.material=m;const u="bold 220px monospace";d.drawText(t.name.split("-")[1].toUpperCase(),65,185,u,"black","white");const b=new K("highlight-layer");b.innerGlow=!0,b.outerGlow=!1,b.isEnabled=!1,C(t,B).addBehavior(new te(b,M.Green())),ie(r,r.position.x,r.position.y,r.position.z)};function ie(t,e,n,s){let o,a=new U({dragPlaneNormal:new O(0,0,1)});a.useObjectOrientationForDragging=!1,a.moveAttached=!1,a.onDragStartObservable.add(()=>{o&&clearTimeout(o)}),a.onDragObservable.add(r=>{t.moveWithCollisions(r.delta)}),a.onDragEndObservable.add(()=>{o=setTimeout(()=>ne(t,e,n,s),J)}),t.addBehavior(a)}function ne(t,e,n,s){t.isPickable=!1;let o=t.name.split("-")[0],a=t.getScene(),r=t.getChildMeshes(),g=r.find(N=>N.name==="cylinder"),i=r.find(N=>N.name==="liquid"),y=i.visibility,h=new p("InvisibilityOfCylinder","visibility",120,p.ANIMATIONTYPE_FLOAT,p.ANIMATIONLOOPMODE_CONSTANT),l=new p("VisibilityOfCylinder","visibility",120,p.ANIMATIONTYPE_FLOAT,p.ANIMATIONLOOPMODE_CONSTANT),d=new p("InvisibilityOfLiquid","visibility",120,p.ANIMATIONTYPE_FLOAT,p.ANIMATIONLOOPMODE_CONSTANT),m=new p("VisibilityOfLiquid","visibility",120,p.ANIMATIONTYPE_FLOAT,p.ANIMATIONLOOPMODE_CONSTANT);const u=[];u.push({frame:0,value:y}),u.push({frame:60,value:0});const b=[];b.push({frame:0,value:0}),b.push({frame:60,value:y});const f=[];f.push({frame:0,value:1}),f.push({frame:60,value:0});const A=[];A.push({frame:0,value:0}),A.push({frame:60,value:1}),g.animations.push(h),g.animations.push(l),i.animations.push(d),i.animations.push(m),h.setKeys(f),l.setKeys(A),d.setKeys(u),m.setKeys(b),a.beginDirectAnimation(g,[h],0,60,!1),a.beginDirectAnimation(i,[d],0,60,!1,void 0,()=>{g.rotation.z=Math.PI*2,t.position.x=e,t.position.y=n,t.position.z=s,g.getAnimationByName(`${o}-rotateAroundZ`),a.beginDirectAnimation(g,[l],0,60,!1),a.beginDirectAnimation(i,[m],0,60,!1,void 0,()=>{t.isPickable=!0})})}function ae(t){t.name="clipboard";const e=t.getScene(),n=e.getMeshByName("Table");if(n){const o=n.getBoundingInfo().boundingBox;t.position.y=o.maximumWorld.y+.003}t.rotationQuaternion=null,t.rotation=new O(0,Math.PI/4,0);const s=e.getMeshByName("pivot-Cylinder-A");s&&(t.position.x=s.position.x+.2,t.position.z=s.position.z+.5)}function oe(t){var e=new k(M.FromHexString("#0984e3"));e.ignoreChildren=!0;var n=t[0],s=k.MakeNotPickableAndWrapInBoundingBox(n);e.attachedMesh=s,e.onScaleBoxDragObservable.add(()=>{console.log("scaleDrag")}),e.onScaleBoxDragEndObservable.add(()=>{const o=e.attachedMesh;if(o){const a=o.getHierarchyBoundingVectors(!0);console.log("size x:",a.max.x-a.min.x),console.log("size y:",a.max.y-a.min.y),console.log("size z:",a.max.z-a.min.z)}console.log("scaleEnd")}),e.onRotationSphereDragObservable.add(()=>{console.log("rotDrag")}),e.onRotationSphereDragEndObservable.add(()=>{console.log("rotEnd")})}function w(t,e,n){const s=t.find(l=>l.name==="__root__"),o=s.getScene();s.name=n;const a=t.find(l=>l.name==="Label"),r=t.find(l=>l.name==="Placard");r.name=ee;const g=new W("dynamic texture",256,o);g.wAng=-Math.PI/2,g.uAng=Math.PI;const i=new D("Mat",o);i.diffuseTexture=g,a.material=i;const y="bold 220px monospace";g.drawText(s.name.split("-")[1].toUpperCase(),65,185,y,"black","white"),r.addChild(a),r.rotationQuaternion=null,r.rotation=new O(0,Math.PI/2,0);const h=o.getMeshByName("Table");if(h){const l=h.getBoundingInfo().boundingBox;s.position.y=l.maximumWorld.y+.003,s.position.x=(l.maximumWorld.x-l.minimumWorld.x)/z*e+l.minimumWorld.x-.2,s.position.z=(l.centerWorld.z+l.minimumWorld.z)/2+.2}}class se{constructor(e,n,s,o=0){c(this,"complete",!1);c(this,"title");c(this,"description");c(this,"failed",!1);c(this,"onFail");c(this,"onSuccess");c(this,"onCompletion");c(this,"currentState");c(this,"tasks");this.title=e,this.description=n,this.tasks=s,this.currentState=o}}function re(t,e){t.onBeforeRenderObservable.add(function(){let o=["A","B","C"];for(let a=0;a<o.length;a++){const r=t.getMeshByName(`pivot-Cylinder-${o[a]}`),g=t.getMeshByName("Table");if(g&&r){const i=g.getBoundingInfo().boundingBox;r.position.z=(i.centerWorld.z+i.minimumWorld.z)/2}}});let n=["A","B","C"],s=[];for(let o of n){const a=t.getMeshByName(`pivot-Cylinder-${o}`);s.push(a);let r=new p(`${o}-rotateAroundZ`,"rotation.z",120,p.ANIMATIONTYPE_FLOAT,p.ANIMATIONLOOPMODE_CONSTANT),g=C(a,B);const i=[];i.push({frame:0,value:Math.PI*2}),i.push({frame:60,value:4.62}),g.animations.push(r),r.setKeys(i);let y=new p(`${o}-resetRotateAroundZ`,"rotation.z",120,p.ANIMATIONTYPE_FLOAT,p.ANIMATIONLOOPMODE_CONSTANT);const h=[];h.push({frame:0,value:4.62}),h.push({frame:60,value:Math.PI*2}),g.animations.push(y),y.setKeys(h)}for(let o=0;o<n.length;o++){const a=t.getMeshByName(`pivot-Cylinder-${n[o]}`),r=a.getBehaviorByName("PointerDrag");let g=[];for(let h of s)h!=a&&g.push(h);let i=C(a,B),y=!1;r.onDragObservable.add(()=>{const h=C(a,B).getBehaviorByName("Highlight");let l=!1;for(let d of g){let m=C(d,"LEFT_COLLISION"),u=C(d,"RIGHT_COLLISION"),b=C(d,B);if(a.intersectsMesh(m)||a.intersectsMesh(u)){l=!0;let f=d.name.split("-")[2],N=`${a.name.split("-")[2]}to${f}`;if(e.tasks[e.currentState].label===N&&(e.tasks[e.currentState].next==="complete"?window.location.assign("."):e.currentState=e.tasks.indexOf(e.tasks.find(v=>v.label==e.tasks[e.currentState].next))),h&&(h.highlightMesh(i),h.highlightMesh(b),a.intersectsMesh(m)?(b.rotation.y=Math.PI,i.rotation.y=0):(b.rotation.y=0,i.rotation.y=Math.PI),!y)){let v=i.getAnimationByName(`${n[o]}-rotateAroundZ`);y=!0,t.beginDirectAnimation(i,[v],0,60,!1,void 0,()=>{})}break}else h.unhighlightMesh(b)}if(l==!1){h.unhighlightMesh(i);let d=i.getAnimationByName(`${n[o]}-resetRotateAroundZ`);y&&(y=!1,t.beginDirectAnimation(i,[d],0,60,!1,void 0,()=>{}))}}),r.onDragEndObservable.add(()=>{const h=C(a,B).getBehaviorByName("Highlight");for(let l of g){let d=C(l,"LEFT_COLLISION"),m=C(l,"RIGHT_COLLISION"),u=C(l,B);if(h.unhighlightMesh(i),h.unhighlightMesh(u),i.intersectsMesh(d)||i.intersectsMesh(m)){let b=i.getAnimationByName(`${n[o]}-resetRotateAroundZ`);i.rotation.z==4.62&&t.beginDirectAnimation(i,[b],0,60,!1,void 0,()=>{})}}})}}var I;class le{constructor(e){c(this,"flying",!1);c(this,"active",!1);c(this,"camera");c(this,"mesh");c(this,"offset",.3);c(this,"animations");c(this,"returnPosition");c(this,"returnRotation");c(this,"onPointerDownObserver");c(this,"xrCamera");c(this,"attach",(e,n,s,o,a)=>{const r=e.getScene();if(this.mesh=e,!n&&(n=r.activeCamera,!n))throw new Error("The scene has no active camera, and no camera was provided.");this.camera=n,s||(s=this.mesh.position),o||(o=this.mesh.rotation),a&&(this.offset=a),this.returnPosition=s,this.returnRotation=o,this.onPointerDownObserver=r.onPointerObservable.add(this.clipboardClick)});c(this,"detach",()=>{this.mesh.getScene().onPointerObservable.remove(this.onPointerDownObserver)});c(this,"clipboardClick",(e={type:_.POINTERDOWN,pickInfo:{pickedMesh:this.mesh}})=>{var n;if(e.type===_.POINTERDOWN){const s=(n=e.pickInfo)==null?void 0:n.pickedMesh;if(s&&(s===this.mesh||s.isDescendantOf(this.mesh))&&!this.flying){const o=this.active?L/2:0,a=this.active?0:L/2;S(this,I).call(this),this.flying=!0,this.mesh.billboardMode==P.BILLBOARDMODE_ALL?this.mesh.billboardMode=P.BILLBOARDMODE_NONE:this.mesh.billboardMode=P.BILLBOARDMODE_ALL,this.mesh.getScene().beginDirectAnimation(this.mesh,this.animations,o,a,!1,void 0,()=>{this.flying=!1,this.active=!this.active})}}});c(this,"calculateTargetPositionWithOffset",e=>{if(this.xrCamera!==void 0&&this.xrCamera.state===V.IN_XR){const r=this.xrCamera.camera._position.subtract(this.returnPosition).scale(1-e/O.Distance(this.returnPosition,this.xrCamera.camera._position));return this.returnPosition.add(r)}const s=this.camera._position.subtract(this.returnPosition).scale(1-e/O.Distance(this.returnPosition,this.camera._position));return this.returnPosition.add(s)});c(this,"setClipboardUp",()=>new O(3.1468286,4.6617744,1.680752));E(this,I,()=>{const e=this.animations.find(({name:a})=>a==="translate"),n=this.animations.find(({name:a})=>a==="rotate"),s=[{frame:0,value:this.returnPosition},{frame:L/2,value:this.calculateTargetPositionWithOffset(this.offset)}],o=[{frame:0,value:this.returnRotation},{frame:L/2,value:this.setClipboardUp()}];e.setKeys(s),n.setKeys(o)});const n=new p("translate","position",L,p.ANIMATIONTYPE_VECTOR3),s=new p("rotate","rotation",L,p.ANIMATIONTYPE_VECTOR3);this.animations=[n,s],this.xrCamera=e}get name(){return"FlyToCamera"}init(){}}I=new WeakMap;class he{constructor(){let e,n=new se("","",[{next:"CtoA",label:"BtoC"},{next:"complete",label:"CtoA"}]);const s=[{fileName:"NewLaboratoryUNFINISHED.glb",callback:i=>r(i),label:"floor"},{fileName:"TLLGraduatedCylinderWithLabel.glb",callback:i=>T(i[0],1,"Cylinder-A",new M(1,0,0)),label:"Cylinder-A"},{fileName:"TLLGraduatedCylinderWithLabel.glb",callback:i=>T(i[0],2,"Cylinder-B",new M(0,1,0)),label:"Cylinder-B"},{fileName:"TLLGraduatedCylinderWithLabel.glb",callback:i=>T(i[0],3,"Cylinder-C",new M(0,0,1)),label:"Cylinder-C"},{fileName:"clipBoardWithPaperCompressedTexture.glb",callback:i=>ae(i[0])},{fileName:"Placard_Label.glb",callback:i=>w(i,1,"Placard-A")},{fileName:"Placard_Label.glb",callback:i=>w(i,2,"Placard-B")},{fileName:"Placard_Label.glb",callback:i=>w(i,3,"Placard-C")}].map(function(i){return Object.assign({},{fileName:"LabBench.glb",root:"./models/",callback:oe,label:"NoLabel"},i)});g().then(o);async function o(i){let y=i.getCameraByName("camera"),h=i.getLightByName("light1");y.speed=.16;let l=setInterval(()=>{h.intensity>=1?clearInterval(l):h.intensity+=.1},60);await a(i);const d=i.getMeshByName("clipboard");if(e){const b=new le(e.baseExperience);d.addBehavior(b)}re(i,n);let m,u;e.input.onControllerAddedObservable.add(b=>{b.onMotionControllerInitObservable.add(f=>{const A=new Y(O.Zero(),O.Zero(),.25),N=f.getComponentOfType("squeeze");N.onButtonStateChangedObservable.add(()=>{if(f.rootMesh,N.pressed){b.getWorldPointerRayToRef(A,!0),console.log("HEY SHOULD PICK UP"),A.length=.25;let v=i.pickWithRay(A);(v==null?void 0:v.hit)&&v.pickedMesh.name.includes("pivot-Cylinder")&&(m=i.getMeshByName(v.pickedMesh.name),u=m==null?void 0:m.getBehaviorByName("PointerDrag"),u.dragging||(console.log("starting the drag"),u.startDrag()))}else m&&u.dragging&&(u.releaseDrag(),m=null,u=null)})})})}async function a(i){const y=["WallsandFloor","WallsAndFloor.001"],h=[];for(let d of y){console.log(d);const m=i.getMeshByName(d);m&&h.push(m)}let l={floorMeshes:h};e=await i.createDefaultXRExperienceAsync(l),e.pointerSelection.detach()}function r(i){const y=["WallsandFloor","WallsAndFloor.001","Table","Roof","Countertop","Walls"];let h,l;for(let d of y){const m=i.find(u=>u.name===d);if(m&&(m.checkCollisions=!0,m.name==="Table")){const b=m.getBoundingInfo().boundingBox.center.x;h=m.getScene(),l=h.getCameraByName("camera"),l.position.x=b-.7}}}function g(){return new Promise(i=>{var y=document.getElementById("canvas"),h=new $(y,!0,{stencil:!0}),l=new G(h);l.collisionsEnabled=!0,window.addEventListener("resize",function(){h.resize()}),j(l);const d=new Z("camera",new O(0,1.84,-1.134),l);d.ellipsoid=new O(.4,.7,.4),d.attachControl(y,!0),d.applyGravity=!0,d.minZ=0,d.speed=0,d.checkCollisions=!0,d.keysUp.push(87),d.keysDown.push(83),d.keysLeft.push(65),d.keysRight.push(68);var m=new X("light1",new O(1,1,0),l);m.intensity=0,Promise.all(s.map(u=>new Promise(b=>Q.ImportMesh("",u.root,u.fileName,l,function(f){u.mesh=f,b(f)})))).then(()=>{s.map(u=>{u.callback(u.mesh),i(l)})}),window.addEventListener("keydown",u=>{u.shiftKey&&u.ctrlKey&&u.altKey&&u.keyCode===73&&(l.debugLayer.isVisible()?l.debugLayer.hide():l.debugLayer.show())}),h.runRenderLoop(()=>{l.render()})})}}}new he;
